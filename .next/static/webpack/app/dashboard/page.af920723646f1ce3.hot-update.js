"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx":
/*!**************************************************!*\
  !*** ./src/components/voucherPDF/VoucherPDF.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateVoucherPDF: function() { return /* binding */ generateVoucherPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qrcode */ \"(app-pages-browser)/./node_modules/qrcode/lib/browser.js\");\n\n\n/**\n * Generates a minimalist PDF for vouchers\n */ const generateVoucherPDF = async (voucher)=>{\n    console.log(\"Generating PDF with voucher data:\", voucher); // Log para depuração\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: \"a5\"\n    });\n    // Define minimalist colors - monochromatic scheme\n    const primaryColor = voucher.primaryColor || \"#333333\";\n    const secondaryColor = voucher.secondaryColor || \"#666666\";\n    const textColor = voucher.textColor || \"#333333\";\n    // Convert hex colors to RGB for jsPDF\n    const primaryRGB = hexToRgb(primaryColor);\n    const secondaryRGB = hexToRgb(secondaryColor);\n    const textRGB = hexToRgb(textColor);\n    // Get page dimensions\n    const width = doc.internal.pageSize.getWidth();\n    const height = doc.internal.pageSize.getHeight();\n    // Add clean white background\n    doc.setFillColor(255, 255, 255);\n    doc.rect(0, 0, width, height, \"F\");\n    // Add minimal border\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.3);\n    doc.setLineWidth(0.5);\n    doc.rect(10, 10, width - 20, height - 20, \"S\");\n    // Add company logo (if available)\n    if (voucher.logoUrl) {\n        try {\n            const response = await fetch(voucher.logoUrl);\n            const blob = await response.blob();\n            const reader = new FileReader();\n            const base64Promise = new Promise((resolve, reject)=>{\n                reader.onloadend = ()=>resolve(reader.result);\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            });\n            const base64Logo = await base64Promise;\n            const img = new Image();\n            img.src = base64Logo;\n            await new Promise((resolve)=>{\n                img.onload = resolve;\n            });\n            const originalWidth = img.width;\n            const originalHeight = img.height;\n            const maxWidth = 40;\n            const maxHeight = 20;\n            let logoWidth = maxWidth;\n            let logoHeight = maxHeight;\n            if (originalWidth > originalHeight) {\n                logoHeight = originalHeight / originalWidth * maxWidth;\n            } else {\n                logoWidth = originalWidth / originalHeight * maxHeight;\n            }\n            const logoX = width - 60;\n            const logoY = 20;\n            doc.addImage(base64Logo, \"PNG\", logoX, logoY, logoWidth, logoHeight);\n        } catch (error) {\n            console.error(\"Error loading logo:\", error);\n            const placeholderWidth = 40;\n            const placeholderHeight = 20;\n            const placeholderX = width - 60;\n            const placeholderY = 20;\n            doc.setFillColor(240, 240, 240);\n            doc.rect(placeholderX, placeholderY, placeholderWidth, placeholderHeight, \"F\");\n        }\n    }\n    // Ajustar a posição e largura do nome do voucher\n    doc.setFontSize(24);\n    doc.setTextColor(0, 0, 0); // Cor preta para o texto\n    doc.setFont(\"helvetica\", \"bold\");\n    // Definir limites para o texto\n    const nameX = 20; // Posição X inicial\n    const nameY = 40; // Posição Y inicial\n    const maxWidth = width - 80; // Limite de largura (para evitar sobreposição com a logo)\n    // Renderizar o nome do voucher com limite de largura\n    doc.text(voucher.name || \"Gift Voucher\", nameX, nameY, {\n        maxWidth\n    });\n    // Adjusted position for the voucher description\n    if (voucher.description) {\n        doc.setFontSize(10);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        const voucherDescription = voucher.description.trim() || \"Descri\\xe7\\xe3o padr\\xe3o do voucher.\";\n        // Renderizar a descrição com limite de largura\n        doc.text(voucherDescription, 20, 50, {\n            maxWidth: width - 80\n        });\n    }\n    const dividerY = voucher.description ? 65 : 55;\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.2);\n    doc.setLineWidth(0.3);\n    doc.line(20, dividerY, width - 20, dividerY);\n    const amountY = dividerY + 15;\n    const codeY = amountY + 15;\n    doc.setFontSize(8);\n    doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(\"VOUCHER CODE\", 20, codeY);\n    doc.setFontSize(16);\n    doc.setTextColor(textRGB.r, textRGB.g, textRGB.b);\n    doc.setFont(\"courier\", \"normal\");\n    doc.text(voucher.code, 20, codeY + 8);\n    let qrCodeData = voucher.qrCode;\n    if (!qrCodeData) {\n        try {\n            qrCodeData = await qrcode__WEBPACK_IMPORTED_MODULE_1__.toDataURL(voucher.code, {\n                errorCorrectionLevel: \"M\",\n                margin: 1,\n                color: {\n                    dark: textColor,\n                    light: \"#FFFFFF\"\n                }\n            });\n        } catch (error) {\n            console.error(\"Error generating QR Code:\", error);\n        }\n    }\n    if (qrCodeData) {\n        const qrSize = 30;\n        const qrX = width - 50;\n        const qrY = height - 50;\n        doc.addImage(qrCodeData, \"PNG\", qrX, qrY, qrSize, qrSize);\n    }\n    if (voucher.expiryDate) {\n        const expiryDate = new Date(voucher.expiryDate);\n        const formattedDate = expiryDate.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n        doc.setFontSize(10);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.text(\"Valid until: \".concat(formattedDate), 20, height - 20);\n    }\n    if (voucher.status) {\n        const statusY = 20;\n        const statusColor = getMinimalistStatusColor(voucher.status);\n        const statusRGB = hexToRgb(statusColor);\n        doc.setFontSize(10);\n        doc.setTextColor(statusRGB.r, statusRGB.g, statusRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(voucher.status.toUpperCase(), width - 20, statusY, {\n            align: \"right\"\n        });\n    }\n    return doc.output(\"blob\");\n};\n/**\n * Returns a muted color based on voucher status for minimalist design\n */ function getMinimalistStatusColor(status) {\n    switch(status.toLowerCase()){\n        case \"active\":\n            return \"#4B9D74\";\n        case \"used\":\n            return \"#9CA3AF\";\n        case \"expired\":\n            return \"#DC6F79\";\n        case \"pending\":\n            return \"#D7A45E\";\n        default:\n            return \"#6B7280\";\n    }\n}\nfunction hexToRgb(hex) {\n    hex = hex.replace(/^#/, \"\");\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return {\n        r,\n        g,\n        b\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx\n"));

/***/ })

});