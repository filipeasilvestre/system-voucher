"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/create-voucher/page",{

/***/ "(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx":
/*!**************************************************!*\
  !*** ./src/components/voucherPDF/VoucherPDF.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateVoucherPDF: function() { return /* binding */ generateVoucherPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qrcode */ \"(app-pages-browser)/./node_modules/qrcode/lib/browser.js\");\n\n\n/**\n * Generates a minimalist PDF for vouchers\n */ const generateVoucherPDF = async (voucher)=>{\n    console.log(\"Generating PDF with voucher data:\", voucher); // Log para depuração\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: \"a5\"\n    });\n    // Define minimalist colors - monochromatic scheme\n    const primaryColor = voucher.primaryColor || \"#333333\";\n    const secondaryColor = voucher.secondaryColor || \"#666666\";\n    const textColor = voucher.textColor || \"#333333\";\n    // Convert hex colors to RGB for jsPDF\n    const primaryRGB = hexToRgb(primaryColor);\n    const secondaryRGB = hexToRgb(secondaryColor);\n    const textRGB = hexToRgb(textColor);\n    // Get page dimensions\n    const width = doc.internal.pageSize.getWidth();\n    const height = doc.internal.pageSize.getHeight();\n    // Add clean white background\n    doc.setFillColor(255, 255, 255);\n    doc.rect(0, 0, width, height, \"F\");\n    // Add minimal border\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.3);\n    doc.setLineWidth(0.5);\n    doc.rect(10, 10, width - 20, height - 20, \"S\");\n    // Add company logo (if available)\n    if (voucher.logoUrl) {\n        try {\n            const response = await fetch(voucher.logoUrl);\n            const blob = await response.blob();\n            const reader = new FileReader();\n            const base64Promise = new Promise((resolve, reject)=>{\n                reader.onloadend = ()=>resolve(reader.result);\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            });\n            const base64Logo = await base64Promise;\n            const img = new Image();\n            img.src = base64Logo;\n            await new Promise((resolve)=>{\n                img.onload = resolve;\n            });\n            const originalWidth = img.width;\n            const originalHeight = img.height;\n            const maxWidth = 40;\n            const maxHeight = 20;\n            let logoWidth = maxWidth;\n            let logoHeight = maxHeight;\n            if (originalWidth > originalHeight) {\n                logoHeight = originalHeight / originalWidth * maxWidth;\n            } else {\n                logoWidth = originalWidth / originalHeight * maxHeight;\n            }\n            const logoX = width - 60;\n            const logoY = 20;\n            doc.addImage(base64Logo, \"PNG\", logoX, logoY, logoWidth, logoHeight);\n        } catch (error) {\n            console.error(\"Error loading logo:\", error);\n            const placeholderWidth = 40;\n            const placeholderHeight = 20;\n            const placeholderX = width - 60;\n            const placeholderY = 20;\n            doc.setFillColor(240, 240, 240);\n            doc.rect(placeholderX, placeholderY, placeholderWidth, placeholderHeight, \"F\");\n        }\n    }\n    // Ajustar a posição e largura do nome do voucher\n    doc.setFontSize(24);\n    doc.setTextColor(0, 0, 0); // Cor preta para o texto\n    doc.setFont(\"helvetica\", \"bold\");\n    // Definir limites para o texto\n    const nameX = 20; // Posição X inicial\n    const nameY = 40; // Posição Y inicial\n    const maxWidth = width - 80; // Limite de largura (para evitar sobreposição com a logo)\n    // Renderizar o nome do voucher com limite de largura\n    doc.text(voucher.name || \"Gift Voucher\", nameX, nameY, {\n        maxWidth\n    });\n    // Adjusted position for the voucher description\n    if (voucher.description) {\n        doc.setFontSize(10);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.text(voucher.description, 20, 50, {\n            maxWidth: width - 80\n        });\n    }\n    const dividerY = voucher.description ? 65 : 55;\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.2);\n    doc.setLineWidth(0.3);\n    doc.line(20, dividerY, width - 20, dividerY);\n    const amountY = dividerY + 15;\n    const codeY = amountY + 15;\n    doc.setFontSize(8);\n    doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(\"VOUCHER CODE\", 20, codeY);\n    doc.setFontSize(16);\n    doc.setTextColor(textRGB.r, textRGB.g, textRGB.b);\n    doc.setFont(\"courier\", \"normal\");\n    doc.text(voucher.code, 20, codeY + 8);\n    let qrCodeData = voucher.qrCode;\n    if (!qrCodeData) {\n        try {\n            qrCodeData = await qrcode__WEBPACK_IMPORTED_MODULE_1__.toDataURL(voucher.code, {\n                errorCorrectionLevel: \"M\",\n                margin: 1,\n                color: {\n                    dark: textColor,\n                    light: \"#FFFFFF\"\n                }\n            });\n        } catch (error) {\n            console.error(\"Error generating QR Code:\", error);\n        }\n    }\n    if (qrCodeData) {\n        const qrSize = 30;\n        const qrX = width - 50;\n        const qrY = height - 50;\n        doc.addImage(qrCodeData, \"PNG\", qrX, qrY, qrSize, qrSize);\n    }\n    if (voucher.expiryDate) {\n        const expiryDate = new Date(voucher.expiryDate);\n        const formattedDate = expiryDate.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n        doc.setFontSize(10);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.text(\"Valid until: \".concat(formattedDate), 20, height - 20);\n    }\n    if (voucher.status) {\n        const statusY = 20;\n        const statusColor = getMinimalistStatusColor(voucher.status);\n        const statusRGB = hexToRgb(statusColor);\n        doc.setFontSize(10);\n        doc.setTextColor(statusRGB.r, statusRGB.g, statusRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(voucher.status.toUpperCase(), width - 20, statusY, {\n            align: \"right\"\n        });\n    }\n    return doc.output(\"blob\");\n};\n/**\n * Returns a muted color based on voucher status for minimalist design\n */ function getMinimalistStatusColor(status) {\n    switch(status.toLowerCase()){\n        case \"active\":\n            return \"#4B9D74\";\n        case \"used\":\n            return \"#9CA3AF\";\n        case \"expired\":\n            return \"#DC6F79\";\n        case \"pending\":\n            return \"#D7A45E\";\n        default:\n            return \"#6B7280\";\n    }\n}\nfunction hexToRgb(hex) {\n    hex = hex.replace(/^#/, \"\");\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return {\n        r,\n        g,\n        b\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3ZvdWNoZXJQREYvVm91Y2hlclBERi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQ0U7QUF3QjVCOztDQUVDLEdBQ00sTUFBTUUscUJBQXFCLE9BQU9DO0lBQ3ZDQyxRQUFRQyxHQUFHLENBQUMscUNBQXFDRixVQUFVLHFCQUFxQjtJQUVoRixNQUFNRyxNQUFNLElBQUlOLDZDQUFLQSxDQUFDO1FBQ3BCTyxhQUFhO1FBQ2JDLE1BQU07UUFDTkMsUUFBUTtJQUNWO0lBRUEsa0RBQWtEO0lBQ2xELE1BQU1DLGVBQWVQLFFBQVFPLFlBQVksSUFBSTtJQUM3QyxNQUFNQyxpQkFBaUJSLFFBQVFRLGNBQWMsSUFBSTtJQUNqRCxNQUFNQyxZQUFZVCxRQUFRUyxTQUFTLElBQUk7SUFFdkMsc0NBQXNDO0lBQ3RDLE1BQU1DLGFBQWFDLFNBQVNKO0lBQzVCLE1BQU1LLGVBQWVELFNBQVNIO0lBQzlCLE1BQU1LLFVBQVVGLFNBQVNGO0lBRXpCLHNCQUFzQjtJQUN0QixNQUFNSyxRQUFRWCxJQUFJWSxRQUFRLENBQUNDLFFBQVEsQ0FBQ0MsUUFBUTtJQUM1QyxNQUFNQyxTQUFTZixJQUFJWSxRQUFRLENBQUNDLFFBQVEsQ0FBQ0csU0FBUztJQUU5Qyw2QkFBNkI7SUFDN0JoQixJQUFJaUIsWUFBWSxDQUFDLEtBQUssS0FBSztJQUMzQmpCLElBQUlrQixJQUFJLENBQUMsR0FBRyxHQUFHUCxPQUFPSSxRQUFRO0lBRTlCLHFCQUFxQjtJQUNyQmYsSUFBSW1CLFlBQVksQ0FBQ1osV0FBV2EsQ0FBQyxFQUFFYixXQUFXYyxDQUFDLEVBQUVkLFdBQVdlLENBQUMsRUFBRTtJQUMzRHRCLElBQUl1QixZQUFZLENBQUM7SUFDakJ2QixJQUFJa0IsSUFBSSxDQUFDLElBQUksSUFBSVAsUUFBUSxJQUFJSSxTQUFTLElBQUk7SUFFMUMsa0NBQWtDO0lBQ2xDLElBQUlsQixRQUFRMkIsT0FBTyxFQUFFO1FBQ25CLElB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RUEsTUFBTUcsU0FBU0MsU0FBU0osS0FBSztJQUM3QixNQUFNN0UsSUFBSSxVQUFXLEtBQU07SUFDM0IsTUFBTUMsSUFBSSxVQUFXLElBQUs7SUFDMUIsTUFBTUMsSUFBSThFLFNBQVM7SUFFbkIsT0FBTztRQUFFaEY7UUFBR0M7UUFBR0M7SUFBRTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy92b3VjaGVyUERGL1ZvdWNoZXJQREYudHN4P2RiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzUERGIGZyb20gXCJqc3BkZlwiO1xuaW1wb3J0IFFSQ29kZSBmcm9tIFwicXJjb2RlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVm91Y2hlciB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgY29kZTogc3RyaW5nO1xuICBzdGF0dXM6IHN0cmluZztcbiAgZXhwaXJ5RGF0ZTogc3RyaW5nIHwgbnVsbDtcbiAgcmVkZW1wdGlvbnM6IG51bWJlcjtcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIGFtb3VudD86IG51bWJlcjtcbiAgY3VycmVuY3k/OiBzdHJpbmc7XG4gIHFyQ29kZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHRlbXBsYXRlPzogc3RyaW5nO1xuICBwcmltYXJ5Q29sb3I/OiBzdHJpbmc7XG4gIHNlY29uZGFyeUNvbG9yPzogc3RyaW5nO1xuICB0ZXh0Q29sb3I/OiBzdHJpbmc7XG4gIGxvZ29Vcmw/OiBzdHJpbmc7XG4gIHNob3dMb2dvPzogYm9vbGVhbjtcbiAgc2hvd1FSQ29kZT86IGJvb2xlYW47XG4gIHNob3dFeHBpcnlEYXRlPzogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBtaW5pbWFsaXN0IFBERiBmb3Igdm91Y2hlcnNcbiAqL1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlVm91Y2hlclBERiA9IGFzeW5jICh2b3VjaGVyOiBWb3VjaGVyKTogUHJvbWlzZTxCbG9iPiA9PiB7XG4gIGNvbnNvbGUubG9nKFwiR2VuZXJhdGluZyBQREYgd2l0aCB2b3VjaGVyIGRhdGE6XCIsIHZvdWNoZXIpOyAvLyBMb2cgcGFyYSBkZXB1cmHDp8Ojb1xuXG4gIGNvbnN0IGRvYyA9IG5ldyBqc1BERih7XG4gICAgb3JpZW50YXRpb246IFwibGFuZHNjYXBlXCIsXG4gICAgdW5pdDogXCJtbVwiLFxuICAgIGZvcm1hdDogXCJhNVwiLFxuICB9KTtcblxuICAvLyBEZWZpbmUgbWluaW1hbGlzdCBjb2xvcnMgLSBtb25vY2hyb21hdGljIHNjaGVtZVxuICBjb25zdCBwcmltYXJ5Q29sb3IgPSB2b3VjaGVyLnByaW1hcnlDb2xvciB8fCBcIiMzMzMzMzNcIjtcbiAgY29uc3Qgc2Vjb25kYXJ5Q29sb3IgPSB2b3VjaGVyLnNlY29uZGFyeUNvbG9yIHx8IFwiIzY2NjY2NlwiO1xuICBjb25zdCB0ZXh0Q29sb3IgPSB2b3VjaGVyLnRleHRDb2xvciB8fCBcIiMzMzMzMzNcIjtcblxuICAvLyBDb252ZXJ0IGhleCBjb2xvcnMgdG8gUkdCIGZvciBqc1BERlxuICBjb25zdCBwcmltYXJ5UkdCID0gaGV4VG9SZ2IocHJpbWFyeUNvbG9yKTtcbiAgY29uc3Qgc2Vjb25kYXJ5UkdCID0gaGV4VG9SZ2Ioc2Vjb25kYXJ5Q29sb3IpO1xuICBjb25zdCB0ZXh0UkdCID0gaGV4VG9SZ2IodGV4dENvbG9yKTtcblxuICAvLyBHZXQgcGFnZSBkaW1lbnNpb25zXG4gIGNvbnN0IHdpZHRoID0gZG9jLmludGVybmFsLnBhZ2VTaXplLmdldFdpZHRoKCk7XG4gIGNvbnN0IGhlaWdodCA9IGRvYy5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRIZWlnaHQoKTtcblxuICAvLyBBZGQgY2xlYW4gd2hpdGUgYmFja2dyb3VuZFxuICBkb2Muc2V0RmlsbENvbG9yKDI1NSwgMjU1LCAyNTUpO1xuICBkb2MucmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0LCBcIkZcIik7XG5cbiAgLy8gQWRkIG1pbmltYWwgYm9yZGVyXG4gIGRvYy5zZXREcmF3Q29sb3IocHJpbWFyeVJHQi5yLCBwcmltYXJ5UkdCLmcsIHByaW1hcnlSR0IuYiwgMC4zKTtcbiAgZG9jLnNldExpbmVXaWR0aCgwLjUpO1xuICBkb2MucmVjdCgxMCwgMTAsIHdpZHRoIC0gMjAsIGhlaWdodCAtIDIwLCBcIlNcIik7XG5cbiAgLy8gQWRkIGNvbXBhbnkgbG9nbyAoaWYgYXZhaWxhYmxlKVxuICBpZiAodm91Y2hlci5sb2dvVXJsKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godm91Y2hlci5sb2dvVXJsKTtcbiAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXG4gICAgICBjb25zdCBiYXNlNjRQcm9taXNlID0gbmV3IFByb21pc2U8c3RyaW5nPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSAoKSA9PiByZXNvbHZlKHJlYWRlci5yZXN1bHQgYXMgc3RyaW5nKTtcbiAgICAgICAgcmVhZGVyLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGJsb2IpO1xuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGJhc2U2NExvZ28gPSBhd2FpdCBiYXNlNjRQcm9taXNlO1xuXG4gICAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIGltZy5zcmMgPSBiYXNlNjRMb2dvO1xuXG4gICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBpbWcub25sb2FkID0gcmVzb2x2ZTtcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBvcmlnaW5hbFdpZHRoID0gaW1nLndpZHRoO1xuICAgICAgY29uc3Qgb3JpZ2luYWxIZWlnaHQgPSBpbWcuaGVpZ2h0O1xuXG4gICAgICBjb25zdCBtYXhXaWR0aCA9IDQwO1xuICAgICAgY29uc3QgbWF4SGVpZ2h0ID0gMjA7XG5cbiAgICAgIGxldCBsb2dvV2lkdGggPSBtYXhXaWR0aDtcbiAgICAgIGxldCBsb2dvSGVpZ2h0ID0gbWF4SGVpZ2h0O1xuXG4gICAgICBpZiAob3JpZ2luYWxXaWR0aCA+IG9yaWdpbmFsSGVpZ2h0KSB7XG4gICAgICAgIGxvZ29IZWlnaHQgPSAob3JpZ2luYWxIZWlnaHQgLyBvcmlnaW5hbFdpZHRoKSAqIG1heFdpZHRoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9nb1dpZHRoID0gKG9yaWdpbmFsV2lkdGggLyBvcmlnaW5hbEhlaWdodCkgKiBtYXhIZWlnaHQ7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGxvZ29YID0gd2lkdGggLSA2MDtcbiAgICAgIGNvbnN0IGxvZ29ZID0gMjA7XG5cbiAgICAgIGRvYy5hZGRJbWFnZShiYXNlNjRMb2dvLCBcIlBOR1wiLCBsb2dvWCwgbG9nb1ksIGxvZ29XaWR0aCwgbG9nb0hlaWdodCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2FkaW5nIGxvZ286XCIsIGVycm9yKTtcblxuICAgICAgY29uc3QgcGxhY2Vob2xkZXJXaWR0aCA9IDQwO1xuICAgICAgY29uc3QgcGxhY2Vob2xkZXJIZWlnaHQgPSAyMDtcbiAgICAgIGNvbnN0IHBsYWNlaG9sZGVyWCA9IHdpZHRoIC0gNjA7XG4gICAgICBjb25zdCBwbGFjZWhvbGRlclkgPSAyMDtcblxuICAgICAgZG9jLnNldEZpbGxDb2xvcigyNDAsIDI0MCwgMjQwKTtcbiAgICAgIGRvYy5yZWN0KHBsYWNlaG9sZGVyWCwgcGxhY2Vob2xkZXJZLCBwbGFjZWhvbGRlcldpZHRoLCBwbGFjZWhvbGRlckhlaWdodCwgXCJGXCIpO1xuICAgIH1cbiAgfVxuXG4vLyBBanVzdGFyIGEgcG9zacOnw6NvIGUgbGFyZ3VyYSBkbyBub21lIGRvIHZvdWNoZXJcbmRvYy5zZXRGb250U2l6ZSgyNCk7XG5kb2Muc2V0VGV4dENvbG9yKDAsIDAsIDApOyAvLyBDb3IgcHJldGEgcGFyYSBvIHRleHRvXG5kb2Muc2V0Rm9udChcImhlbHZldGljYVwiLCBcImJvbGRcIik7XG5cbi8vIERlZmluaXIgbGltaXRlcyBwYXJhIG8gdGV4dG9cbmNvbnN0IG5hbWVYID0gMjA7IC8vIFBvc2nDp8OjbyBYIGluaWNpYWxcbmNvbnN0IG5hbWVZID0gNDA7IC8vIFBvc2nDp8OjbyBZIGluaWNpYWxcbmNvbnN0IG1heFdpZHRoID0gd2lkdGggLSA4MDsgLy8gTGltaXRlIGRlIGxhcmd1cmEgKHBhcmEgZXZpdGFyIHNvYnJlcG9zacOnw6NvIGNvbSBhIGxvZ28pXG5cbi8vIFJlbmRlcml6YXIgbyBub21lIGRvIHZvdWNoZXIgY29tIGxpbWl0ZSBkZSBsYXJndXJhXG5kb2MudGV4dCh2b3VjaGVyLm5hbWUgfHwgXCJHaWZ0IFZvdWNoZXJcIiwgbmFtZVgsIG5hbWVZLCB7IG1heFdpZHRoIH0pO1xuXG4gIC8vIEFkanVzdGVkIHBvc2l0aW9uIGZvciB0aGUgdm91Y2hlciBkZXNjcmlwdGlvblxuICBpZiAodm91Y2hlci5kZXNjcmlwdGlvbikge1xuICAgIGRvYy5zZXRGb250U2l6ZSgxMCk7XG4gICAgZG9jLnNldEZvbnQoXCJoZWx2ZXRpY2FcIiwgXCJub3JtYWxcIik7XG4gICAgZG9jLnNldFRleHRDb2xvcihzZWNvbmRhcnlSR0Iuciwgc2Vjb25kYXJ5UkdCLmcsIHNlY29uZGFyeVJHQi5iKTtcbiAgICBkb2MudGV4dCh2b3VjaGVyLmRlc2NyaXB0aW9uICwgMjAsIDUwLCB7IG1heFdpZHRoOiB3aWR0aCAtIDgwIH0pO1xuICB9XG5cbiAgY29uc3QgZGl2aWRlclkgPSB2b3VjaGVyLmRlc2NyaXB0aW9uID8gNjUgOiA1NTtcbiAgZG9jLnNldERyYXdDb2xvcihwcmltYXJ5UkdCLnIsIHByaW1hcnlSR0IuZywgcHJpbWFyeVJHQi5iLCAwLjIpO1xuICBkb2Muc2V0TGluZVdpZHRoKDAuMyk7XG4gIGRvYy5saW5lKDIwLCBkaXZpZGVyWSwgd2lkdGggLSAyMCwgZGl2aWRlclkpO1xuXG4gIGNvbnN0IGFtb3VudFkgPSBkaXZpZGVyWSArIDE1O1xuXG5cbiAgY29uc3QgY29kZVkgPSBhbW91bnRZICsgMTU7XG5cbiAgZG9jLnNldEZvbnRTaXplKDgpO1xuICBkb2Muc2V0VGV4dENvbG9yKHNlY29uZGFyeVJHQi5yLCBzZWNvbmRhcnlSR0IuZywgc2Vjb25kYXJ5UkdCLmIpO1xuICBkb2Muc2V0Rm9udChcImhlbHZldGljYVwiLCBcIm5vcm1hbFwiKTtcbiAgZG9jLnRleHQoXCJWT1VDSEVSIENPREVcIiwgMjAsIGNvZGVZKTtcblxuICBkb2Muc2V0Rm9udFNpemUoMTYpO1xuICBkb2Muc2V0VGV4dENvbG9yKHRleHRSR0IuciwgdGV4dFJHQi5nLCB0ZXh0UkdCLmIpO1xuICBkb2Muc2V0Rm9udChcImNvdXJpZXJcIiwgXCJub3JtYWxcIik7XG4gIGRvYy50ZXh0KHZvdWNoZXIuY29kZSwgMjAsIGNvZGVZICsgOCk7XG5cbiAgbGV0IHFyQ29kZURhdGEgPSB2b3VjaGVyLnFyQ29kZTtcbiAgaWYgKCFxckNvZGVEYXRhKSB7XG4gICAgdHJ5IHtcbiAgICAgIHFyQ29kZURhdGEgPSBhd2FpdCBRUkNvZGUudG9EYXRhVVJMKHZvdWNoZXIuY29kZSwge1xuICAgICAgICBlcnJvckNvcnJlY3Rpb25MZXZlbDogXCJNXCIsXG4gICAgICAgIG1hcmdpbjogMSxcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICBkYXJrOiB0ZXh0Q29sb3IsXG4gICAgICAgICAgbGlnaHQ6IFwiI0ZGRkZGRlwiLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZW5lcmF0aW5nIFFSIENvZGU6XCIsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICBpZiAocXJDb2RlRGF0YSkge1xuICAgIGNvbnN0IHFyU2l6ZSA9IDMwO1xuICAgIGNvbnN0IHFyWCA9IHdpZHRoIC0gNTA7XG4gICAgY29uc3QgcXJZID0gaGVpZ2h0IC0gNTA7XG5cbiAgICBkb2MuYWRkSW1hZ2UocXJDb2RlRGF0YSwgXCJQTkdcIiwgcXJYLCBxclksIHFyU2l6ZSwgcXJTaXplKTtcbiAgfVxuXG4gIGlmICh2b3VjaGVyLmV4cGlyeURhdGUpIHtcbiAgICBjb25zdCBleHBpcnlEYXRlID0gbmV3IERhdGUodm91Y2hlci5leHBpcnlEYXRlKTtcbiAgICBjb25zdCBmb3JtYXR0ZWREYXRlID0gZXhwaXJ5RGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoXCJlbi1VU1wiLCB7XG4gICAgICB5ZWFyOiBcIm51bWVyaWNcIixcbiAgICAgIG1vbnRoOiBcImxvbmdcIixcbiAgICAgIGRheTogXCJudW1lcmljXCIsXG4gICAgfSk7XG5cbiAgICBkb2Muc2V0Rm9udFNpemUoMTApO1xuICAgIGRvYy5zZXRGb250KFwiaGVsdmV0aWNhXCIsIFwibm9ybWFsXCIpO1xuICAgIGRvYy5zZXRUZXh0Q29sb3Ioc2Vjb25kYXJ5UkdCLnIsIHNlY29uZGFyeVJHQi5nLCBzZWNvbmRhcnlSR0IuYik7XG4gICAgZG9jLnRleHQoYFZhbGlkIHVudGlsOiAke2Zvcm1hdHRlZERhdGV9YCwgMjAsIGhlaWdodCAtIDIwKTtcbiAgfVxuXG4gIGlmICh2b3VjaGVyLnN0YXR1cykge1xuICAgIGNvbnN0IHN0YXR1c1kgPSAyMDtcbiAgICBjb25zdCBzdGF0dXNDb2xvciA9IGdldE1pbmltYWxpc3RTdGF0dXNDb2xvcih2b3VjaGVyLnN0YXR1cyk7XG4gICAgY29uc3Qgc3RhdHVzUkdCID0gaGV4VG9SZ2Ioc3RhdHVzQ29sb3IpO1xuXG4gICAgZG9jLnNldEZvbnRTaXplKDEwKTtcbiAgICBkb2Muc2V0VGV4dENvbG9yKHN0YXR1c1JHQi5yLCBzdGF0dXNSR0IuZywgc3RhdHVzUkdCLmIpO1xuICAgIGRvYy5zZXRGb250KFwiaGVsdmV0aWNhXCIsIFwibm9ybWFsXCIpO1xuICAgIGRvYy50ZXh0KHZvdWNoZXIuc3RhdHVzLnRvVXBwZXJDYXNlKCksIHdpZHRoIC0gMjAsIHN0YXR1c1ksIHtcbiAgICAgIGFsaWduOiBcInJpZ2h0XCIsXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZG9jLm91dHB1dChcImJsb2JcIik7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYSBtdXRlZCBjb2xvciBiYXNlZCBvbiB2b3VjaGVyIHN0YXR1cyBmb3IgbWluaW1hbGlzdCBkZXNpZ25cbiAqL1xuZnVuY3Rpb24gZ2V0TWluaW1hbGlzdFN0YXR1c0NvbG9yKHN0YXR1czogc3RyaW5nKTogc3RyaW5nIHtcbiAgc3dpdGNoIChzdGF0dXMudG9Mb3dlckNhc2UoKSkge1xuICAgIGNhc2UgXCJhY3RpdmVcIjpcbiAgICAgIHJldHVybiBcIiM0QjlENzRcIjtcbiAgICBjYXNlIFwidXNlZFwiOlxuICAgICAgcmV0dXJuIFwiIzlDQTNBRlwiO1xuICAgIGNhc2UgXCJleHBpcmVkXCI6XG4gICAgICByZXR1cm4gXCIjREM2Rjc5XCI7XG4gICAgY2FzZSBcInBlbmRpbmdcIjpcbiAgICAgIHJldHVybiBcIiNEN0E0NUVcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwiIzZCNzI4MFwiO1xuICB9XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBoZXggY29sb3IgdG8gUkdCXG4gKi9cbmludGVyZmFjZSBSR0Ige1xuICByOiBudW1iZXI7XG4gIGc6IG51bWJlcjtcbiAgYjogbnVtYmVyO1xufVxuXG5mdW5jdGlvbiBoZXhUb1JnYihoZXg6IHN0cmluZyk6IFJHQiB7XG4gIGhleCA9IGhleC5yZXBsYWNlKC9eIy8sIFwiXCIpO1xuXG4gIGlmIChoZXgubGVuZ3RoID09PSAzKSB7XG4gICAgaGV4ID0gaGV4WzBdICsgaGV4WzBdICsgaGV4WzFdICsgaGV4WzFdICsgaGV4WzJdICsgaGV4WzJdO1xuICB9XG5cbiAgY29uc3QgYmlnaW50ID0gcGFyc2VJbnQoaGV4LCAxNik7XG4gIGNvbnN0IHIgPSAoYmlnaW50ID4+IDE2KSAmIDI1NTtcbiAgY29uc3QgZyA9IChiaWdpbnQgPj4gOCkgJiAyNTU7XG4gIGNvbnN0IGIgPSBiaWdpbnQgJiAyNTU7XG5cbiAgcmV0dXJuIHsgciwgZywgYiB9O1xufSJdLCJuYW1lcyI6WyJqc1BERiIsIlFSQ29kZSIsImdlbmVyYXRlVm91Y2hlclBERiIsInZvdWNoZXIiLCJjb25zb2xlIiwibG9nIiwiZG9jIiwib3JpZW50YXRpb24iLCJ1bml0IiwiZm9ybWF0IiwicHJpbWFyeUNvbG9yIiwic2Vjb25kYXJ5Q29sb3IiLCJ0ZXh0Q29sb3IiLCJwcmltYXJ5UkdCIiwiaGV4VG9SZ2IiLCJzZWNvbmRhcnlSR0IiLCJ0ZXh0UkdCIiwid2lkdGgiLCJpbnRlcm5hbCIsInBhZ2VTaXplIiwiZ2V0V2lkdGgiLCJoZWlnaHQiLCJnZXRIZWlnaHQiLCJzZXRGaWxsQ29sb3IiLCJyZWN0Iiwic2V0RHJhd0NvbG9yIiwiciIsImciLCJiIiwic2V0TGluZVdpZHRoIiwibG9nb1VybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJibG9iIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsImJhc2U2NFByb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm9ubG9hZGVuZCIsInJlc3VsdCIsIm9uZXJyb3IiLCJyZWFkQXNEYXRhVVJMIiwiYmFzZTY0TG9nbyIsImltZyIsIkltYWdlIiwic3JjIiwib25sb2FkIiwib3JpZ2luYWxXaWR0aCIsIm9yaWdpbmFsSGVpZ2h0IiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJsb2dvV2lkdGgiLCJsb2dvSGVpZ2h0IiwibG9nb1giLCJsb2dvWSIsImFkZEltYWdlIiwiZXJyb3IiLCJwbGFjZWhvbGRlcldpZHRoIiwicGxhY2Vob2xkZXJIZWlnaHQiLCJwbGFjZWhvbGRlclgiLCJwbGFjZWhvbGRlclkiLCJzZXRGb250U2l6ZSIsInNldFRleHRDb2xvciIsInNldEZvbnQiLCJuYW1lWCIsIm5hbWVZIiwidGV4dCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImRpdmlkZXJZIiwibGluZSIsImFtb3VudFkiLCJjb2RlWSIsImNvZGUiLCJxckNvZGVEYXRhIiwicXJDb2RlIiwidG9EYXRhVVJMIiwiZXJyb3JDb3JyZWN0aW9uTGV2ZWwiLCJtYXJnaW4iLCJjb2xvciIsImRhcmsiLCJsaWdodCIsInFyU2l6ZSIsInFyWCIsInFyWSIsImV4cGlyeURhdGUiLCJEYXRlIiwiZm9ybWF0dGVkRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInllYXIiLCJtb250aCIsImRheSIsInN0YXR1cyIsInN0YXR1c1kiLCJzdGF0dXNDb2xvciIsImdldE1pbmltYWxpc3RTdGF0dXNDb2xvciIsInN0YXR1c1JHQiIsInRvVXBwZXJDYXNlIiwiYWxpZ24iLCJvdXRwdXQiLCJ0b0xvd2VyQ2FzZSIsImhleCIsInJlcGxhY2UiLCJsZW5ndGgiLCJiaWdpbnQiLCJwYXJzZUludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx\n"));

/***/ })

});