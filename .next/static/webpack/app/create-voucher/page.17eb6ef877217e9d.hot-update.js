"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/create-voucher/page",{

/***/ "(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx":
/*!**************************************************!*\
  !*** ./src/components/voucherPDF/VoucherPDF.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateVoucherPDF: function() { return /* binding */ generateVoucherPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qrcode */ \"(app-pages-browser)/./node_modules/qrcode/lib/browser.js\");\n\n\n/**\n * Generates a voucher PDF similar to the provided design\n */ const generateVoucherPDF = async (voucher)=>{\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: \"a5\"\n    });\n    // Cores principais\n    const goldColor = \"#D4A574\"; // Cor dourada/âmbar\n    const darkGrayColor = \"#4A4A4A\"; // Cinza escuro para texto\n    const lightGrayColor = \"#8A8A8A\"; // Cinza claro\n    const whiteColor = \"#FFFFFF\";\n    const goldRGB = hexToRgb(goldColor);\n    const darkGrayRGB = hexToRgb(darkGrayColor);\n    const lightGrayRGB = hexToRgb(lightGrayColor);\n    // Dimensões da página\n    const width = doc.internal.pageSize.getWidth();\n    const height = doc.internal.pageSize.getHeight();\n    // Fundo branco\n    doc.setFillColor(255, 255, 255);\n    doc.rect(0, 0, width, height, \"F\");\n    // Decoração nas bordas (elementos geométricos dourados)\n    drawBorderDecorations(doc, width, height, goldColor);\n    // Logo da empresa (pequena, lado esquerdo)\n    const logoSize = 15;\n    const logoX = 15;\n    const logoY = 15;\n    if (voucher.logoUrl) {\n        try {\n            const logoBase64 = await loadImageAsBase64(voucher.logoUrl);\n            doc.addImage(logoBase64, \"JPEG\", logoX, logoY, logoSize, logoSize);\n        } catch (error) {\n            console.error(\"Erro ao carregar logo da empresa:\", error);\n        }\n    }\n    // Nome da empresa \"ECO SALGADOS\"\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(24);\n    doc.setTextColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n    doc.text(\"ECO SALGADOS\", logoX + logoSize + 5, logoY + 8);\n    // Subtítulo da empresa\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(10);\n    doc.setTextColor(lightGrayRGB.r, lightGrayRGB.g, lightGrayRGB.b);\n    doc.text(\"AGROTURISMO & ACTIVIDADES EQUESTRES\", logoX + logoSize + 5, logoY + 14);\n    // Estrelas de avaliação (abaixo do nome da empresa)\n    const starSize = 3;\n    const starSpacing = 8;\n    const starStartX = logoX + logoSize + 5;\n    const starY = logoY + 20;\n    for(let i = 0; i < 5; i++){\n        const starX = starStartX + i * starSpacing;\n        drawStar(doc, starX, starY, starSize, goldColor);\n    }\n    // Linha horizontal decorativa\n    doc.setDrawColor(goldRGB.r, goldRGB.g, goldRGB.b);\n    doc.setLineWidth(1);\n    doc.line(15, 45, width - 15, 45);\n    // \"Gift Voucher\" em script elegante\n    doc.setFont(\"times\", \"italic\");\n    doc.setFontSize(36);\n    doc.setTextColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n    doc.text(\"Gift Voucher\", 20, 65);\n    // Título do passeio\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(28);\n    doc.setTextColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n    doc.text(\"PASSEIO\", 20, 85);\n    doc.text(\"NA PRAIA\", 20, 100);\n    // Número do voucher\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(12);\n    doc.setTextColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n    doc.text(\"Voucher n\\xba \".concat(voucher.code || \"20250214\"), 20, 115);\n    // Selo circular \"VÁLIDO 1 ANO\"\n    const sealX = width / 2 - 20;\n    const sealY = 70;\n    const sealRadius = 18;\n    // Círculo externo dourado\n    doc.setFillColor(goldRGB.r, goldRGB.g, goldRGB.b);\n    doc.circle(sealX, sealY, sealRadius, \"F\");\n    // Círculo interno branco\n    doc.setFillColor(255, 255, 255);\n    doc.circle(sealX, sealY, sealRadius - 3, \"F\");\n    // Texto do selo\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(8);\n    doc.setTextColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n    doc.text(\"V\\xc1LIDO\", sealX, sealY - 3, {\n        align: \"center\"\n    });\n    doc.text(\"1 ANO\", sealX, sealY + 3, {\n        align: \"center\"\n    });\n    // Pontos decorativos no selo\n    const dotSize = 0.5;\n    for(let i = 0; i < 8; i++){\n        const angle = i * Math.PI * 2 / 8;\n        const dotX = sealX + Math.cos(angle) * (sealRadius - 6);\n        const dotY = sealY + Math.sin(angle) * (sealRadius - 6);\n        doc.setFillColor(darkGrayRGB.r, darkGrayRGB.g, darkGrayRGB.b);\n        doc.circle(dotX, dotY, dotSize, \"F\");\n    }\n    // Imagem grande do voucher (lado direito)\n    const voucherImageWidth = width * 0.45;\n    const voucherImageHeight = height * 0.7;\n    const voucherImageX = width - voucherImageWidth - 10;\n    const voucherImageY = 20;\n    if (voucher.voucherImageUrl) {\n        try {\n            const voucherImageBase64 = await loadImageAsBase64(voucher.voucherImageUrl);\n            doc.addImage(voucherImageBase64, \"JPEG\", voucherImageX, voucherImageY, voucherImageWidth, voucherImageHeight);\n        } catch (error) {\n            console.error(\"Erro ao carregar imagem do voucher:\", error);\n            // Placeholder se não conseguir carregar a imagem\n            doc.setFillColor(240, 240, 240);\n            doc.rect(voucherImageX, voucherImageY, voucherImageWidth, voucherImageHeight, \"F\");\n            doc.setTextColor(150, 150, 150);\n            doc.setFontSize(12);\n            doc.text(\"Imagem do Voucher\", voucherImageX + voucherImageWidth / 2, voucherImageY + voucherImageHeight / 2, {\n                align: \"center\"\n            });\n        }\n    }\n    // QR Code (canto inferior esquerdo)\n    if (voucher.qrCode || voucher.showQRCode) {\n        let qrDataURL = voucher.qrCode;\n        if (!qrDataURL) {\n            // Gerar QR Code se não existir\n            try {\n                qrDataURL = await qrcode__WEBPACK_IMPORTED_MODULE_1__.toDataURL(voucher.code || voucher.id, {\n                    width: 150,\n                    margin: 1,\n                    color: {\n                        dark: darkGrayColor,\n                        light: whiteColor\n                    }\n                });\n            } catch (error) {\n                console.error(\"Erro ao gerar QR Code:\", error);\n            }\n        }\n        if (qrDataURL) {\n            const qrSize = 20;\n            const qrX = 15;\n            const qrY = height - qrSize - 15;\n            doc.addImage(qrDataURL, \"PNG\", qrX, qrY, qrSize, qrSize);\n        }\n    }\n    // Data de validade (rodapé)\n    if (voucher.expiryDate || voucher.showExpiryDate) {\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setFontSize(10);\n        doc.setTextColor(lightGrayRGB.r, lightGrayRGB.g, lightGrayRGB.b);\n        const expiryText = voucher.expiryDate ? \"V\\xe1lido at\\xe9: \".concat(new Date(voucher.expiryDate).toLocaleDateString(\"pt-PT\")) : \"V\\xe1lido por 1 ano a partir da data de emiss\\xe3o\";\n        doc.text(expiryText, width / 2, height - 10, {\n            align: \"center\"\n        });\n    }\n    return doc.output(\"blob\");\n};\n/**\n * Draws decorative border elements\n */ function drawBorderDecorations(doc, width, height, color) {\n    const rgb = hexToRgb(color);\n    doc.setFillColor(rgb.r, rgb.g, rgb.b);\n    doc.setDrawColor(rgb.r, rgb.g, rgb.b);\n    doc.setLineWidth(2);\n    // Cantos decorativos\n    const cornerSize = 20;\n    // Canto superior esquerdo\n    doc.line(0, cornerSize, cornerSize, cornerSize);\n    doc.line(cornerSize, 0, cornerSize, cornerSize);\n    // Canto superior direito\n    doc.line(width - cornerSize, 0, width - cornerSize, cornerSize);\n    doc.line(width - cornerSize, cornerSize, width, cornerSize);\n    // Canto inferior esquerdo\n    doc.line(0, height - cornerSize, cornerSize, height - cornerSize);\n    doc.line(cornerSize, height - cornerSize, cornerSize, height);\n    // Canto inferior direito\n    doc.line(width - cornerSize, height - cornerSize, width - cornerSize, height);\n    doc.line(width - cornerSize, height - cornerSize, width, height - cornerSize);\n    // Elementos decorativos (losangos pequenos)\n    const diamondSize = 2;\n    // Topo\n    drawDiamond(doc, width / 2, 8, diamondSize, color);\n    drawDiamond(doc, width / 2 - 15, 8, diamondSize * 0.7, color);\n    drawDiamond(doc, width / 2 + 15, 8, diamondSize * 0.7, color);\n    // Lado esquerdo\n    drawDiamond(doc, 8, height / 2, diamondSize, color);\n    drawDiamond(doc, 8, height / 2 - 15, diamondSize * 0.7, color);\n    drawDiamond(doc, 8, height / 2 + 15, diamondSize * 0.7, color);\n}\n/**\n * Helper function to load image as base64\n */ async function loadImageAsBase64(url) {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onloadend = ()=>resolve(reader.result);\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n}\n/**\n * Helper function to draw a star\n */ function drawStar(doc, x, y, size, color) {\n    const rgb = hexToRgb(color);\n    doc.setFillColor(rgb.r, rgb.g, rgb.b);\n    const points = [];\n    const outerRadius = size;\n    const innerRadius = size * 0.4;\n    for(let i = 0; i < 10; i++){\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\n        const angle = i * Math.PI / 5 - Math.PI / 2;\n        points.push([\n            x + Math.cos(angle) * radius,\n            y + Math.sin(angle) * radius\n        ]);\n    }\n    doc.setDrawColor(rgb.r, rgb.g, rgb.b);\n    doc.setFillColor(rgb.r, rgb.g, rgb.b);\n    // Draw star using lines\n    const lines = [];\n    for(let i = 0; i < points.length; i++){\n        const nextIndex = (i + 1) % points.length;\n        lines.push([\n            points[nextIndex][0] - points[i][0],\n            points[nextIndex][1] - points[i][1]\n        ]);\n    }\n    doc.lines(lines, points[0][0], points[0][1], [\n        1,\n        1\n    ], \"F\");\n}\n/**\n * Helper function to draw a diamond\n */ function drawDiamond(doc, x, y, size, color) {\n    const rgb = hexToRgb(color);\n    doc.setFillColor(rgb.r, rgb.g, rgb.b);\n    const points = [\n        [\n            0,\n            -size\n        ],\n        [\n            size,\n            0\n        ],\n        [\n            0,\n            size\n        ],\n        [\n            -size,\n            0\n        ] // Left point\n    ];\n    doc.lines([\n        [\n            points[1][0] - points[0][0],\n            points[1][1] - points[0][1]\n        ],\n        [\n            points[2][0] - points[1][0],\n            points[2][1] - points[1][1]\n        ],\n        [\n            points[3][0] - points[2][0],\n            points[3][1] - points[2][1]\n        ],\n        [\n            points[0][0] - points[3][0],\n            points[0][1] - points[3][1]\n        ]\n    ], x + points[0][0], y + points[0][1], [\n        1,\n        1\n    ], \"F\");\n}\nfunction hexToRgb(hex) {\n    hex = hex.replace(/^#/, \"\");\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return {\n        r,\n        g,\n        b\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL3ZvdWNoZXJQREYvVm91Y2hlclBERi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQ0U7QUF5QjVCOztDQUVDLEdBQ00sTUFBTUUscUJBQXFCLE9BQU9DO0lBQ3ZDLE1BQU1DLE1BQU0sSUFBSUosNkNBQUtBLENBQUM7UUFDcEJLLGFBQWE7UUFDYkMsTUFBTTtRQUNOQyxRQUFRO0lBQ1Y7SUFFQSxtQkFBbUI7SUFDbkIsTUFBTUMsWUFBWSxXQUFXLG9CQUFvQjtJQUNqRCxNQUFNQyxnQkFBZ0IsV0FBVywwQkFBMEI7SUFDM0QsTUFBTUMsaUJBQWlCLFdBQVcsY0FBYztJQUNoRCxNQUFNQyxhQUFhO0lBRW5CLE1BQU1DLFVBQVVDLFNBQVNMO0lBQ3pCLE1BQU1NLGNBQWNELFNBQVNKO0lBQzdCLE1BQU1NLGVBQWVGLFNBQVNIO0lBRTlCLHNCQUFzQjtJQUN0QixNQUFNTSxRQUFRWixJQUFJYSxRQUFRLENBQUNDLFFBQVEsQ0FBQ0MsUUFBUTtJQUM1QyxNQUFNQyxTQUFTaEIsSUFBSWEsUUFBUSxDQUFDQyxRQUFRLENBQUNHLFNBQVM7SUFFOUMsZUFBZTtJQUNmakIsSUFBSWtCLFlBQVksQ0FBQyxLQUFLLEtBQUs7SUFDM0JsQixJQUFJbUIsSUFBSSxDQUFDLEdBQUcsR0FBR1AsT0FBT0ksUUFBUTtJQUU5Qix3REFBd0Q7SUFDeERJLHNCQUFzQnBCLEtBQUtZLE9BQU9JLFFBQVFaO0lBRTFDLDJDQUEyQztJQUMzQyxNQUFNaUIsV0FBVztJQUNqQixNQUFNQyxRQUFRO0lBQ2QsTUFBTUMsUUFBUTtJQUVkLElBQUl4QixRQUFReUIsT0FBTyxFQUFFO1FBQ25CLElBQUk7WUFDRixNQUFNQyxhQUFhLE1BQU1DLGtCQUFrQjNCLFFBQVF5QixPQUFPO1lBQzFEeEIsSUFBSTJCLFFBQVEsQ0FBQ0YsWUFBWSxRQUFRSCxPQUFPQyxPQUFPRixVQUFVQTtRQUMzRCxFQUFFLE9BQU9PLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHFDQUFxQ0E7UUFDckQ7SUFDRjtJQUVBLGlDQUFpQztJQUNqQzVCLElBQUk4QixPQUFPLENBQUMsYUFBYTtJQUN6QjlCLElBQUkrQixXQUFXLENBQUM7SUFDaEIvQixJQUFJZ0MsWUFBWSxDQUFDdEIsWUFBWXVCLENBQUMsRUFBRXZCLFlBQVl3QixDQUFDLEVBQUV4QixZQUFZeUIsQ0FBQztJQUM1RG5DLElBQUlvQyxJQUFJLENBQUMsZ0JBQWdCZCxRQUFRRCxXQUFXLEdBQUdFLFFBQVE7SUFFdkQsdUJBQXVCO0lBQ3ZCdkIsSUFBSThCLE9BQU8sQ0FBQyxhQUFhO0lBQ3pCOUIsSUFBSStCLFdBQVcsQ0FBQztJQUNoQi9CLElBQUlnQyxZQUFZLENBQUNyQixhQUFhc0IsQ0FBQyxFQUFFdEIsYUFBYXVCLENBQUMsRUFBRXZCLGFBQWF3QixDQUFDO0lBQy9EbkMsSUFBSW9DLElBQUksQ0FBQyx1Q0FBdUNkLFFBQVFELFdBQVcsR0FBR0UsUUFBUTtJQUU5RSxvREFBb0Q7SUFDcEQsTUFBTWMsV0FBVztJQUNqQixNQUFNQyxjQUFjO0lBQ3BCLE1BQU1DLGFBQWFqQixRQUFRRCxXQUFXO0lBQ3RDLE1BQU1tQixRQUFRakIsUUFBUTtJQUV0QixJQUFLLElBQUlrQixJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztRQUMxQixNQUFNQyxRQUFRSCxhQUFhRSxJQUFJSDtRQUMvQkssU0FBUzNDLEtBQUswQyxPQUFPRixPQUFPSCxVQUFVakM7SUFDeEM7SUFFQSw4QkFBOEI7SUFDOUJKLElBQUk0QyxZQUFZLENBQUNwQyxRQUFReUIsQ0FBQyxFQUFFekIsUUFBUTBCLENBQUMsRUFBRTFCLFFBQVEyQixDQUFDO0lBQ2hEbkMsSUFBSTZDLFlBQVksQ0FBQztJQUNqQjdDLElBQUk4QyxJQUFJLENBQUMsSUFBSSxJQUFJbEMsUUFBUSxJQUFJO0lBRTdCLG9DQUFvQztJQUNwQ1osSUFBSThCLE9BQU8sQ0FBQyxTQUFTO0lBQ3JCOUIsSUFBSStCLFdBQVcsQ0FBQztJQUNoQi9CLElBQUlnQyxZQUFZLENBQUN0QixZQUFZdUIsQ0FBQyxFQUFFdkIsWUFBWXdCLENBQUMsRUFBRXhCLFlBQVl5QixDQUFDO0lBQzVEbkMsSUFBSW9DLElBQUksQ0FBQyxnQkFBZ0IsSUFBSTtJQUU3QixvQkFBb0I7SUFDcEJwQyxJQUFJOEIsT0FBTyxDQUFDLGFBQWE7SUFDekI5QixJQUFJK0IsV0FBVyxDQUFDO0lBQ2hCL0IsSUFBSWdDLFlBQVksQ0FBQ3RCLFlBQVl1QixDQUFDLEVBQUV2QixZQUFZd0IsQ0FBQyxFQUFFeEIsWUFBWXlCLENBQUM7SUFDNURuQyxJQUFJb0MsSUFBSSxDQUFDLFdBQVcsSUFBSTtJQUN4QnBDLElBQUlvQyxJQUFJLENBQUMsWUFBWSxJQUFJO0lBRXpCLG9CQUFvQjtJQUNwQnBDLElBQUk4QixPQUFPLENBQUMsYUFBYTtJQUN6QjlCLElBQUkrQixXQUFXLENBQUM7SUFDaEIvQixJQUFJZ0MsWUFBWSxDQUFDdEIsWUFBWXVCLENBQUMsRUFBRXZCLFlBQVl3QixDQUFDLEVBQUV4QixZQUFZeUIsQ0FBQztJQUM1RG5DLElBQUlvQyxJQUFJLENBQUMsaUJBQXlDLE9BQTNCckMsUUFBUWdELElBQUksSUFBSSxhQUFjLElBQUk7SUFFekQsK0JBQStCO0lBQy9CLE1BQU1DLFFBQVFwQyxRQUFRLElBQUk7SUFDMUIsTUFBTXFDLFFBQVE7SUFDZCxNQUFNQyxhQUFhO0lBRW5CLDBCQUEwQjtJQUMxQmxELElBQUlrQixZQUFZLENBQUNWLFFBQVF5QixDQUFDLEVBQUV6QixRQUFRMEIsQ0FBQyxFQUFFMUIsUUFBUTJCLENBQUM7SUFDaERuQyxJQUFJbUQsTUFBTSxDQUFDSCxPQUFPQyxPQUFPQyxZQUFZO0lBRXJDLHlCQUF5QjtJQUN6QmxELElBQUlrQixZQUFZLENBQUMsS0FBSyxLQUFLO0lBQzNCbEIsSUFBSW1ELE1BQU0sQ0FBQ0gsT0FBT0MsT0FBT0MsYUFBYSxHQUFHO0lBRXpDLGdCQUFnQjtJQUNoQmxELElBQUk4QixPQUFPLENBQUMsYUFBYTtJQUN6QjlCLElBQUkrQixXQUFXLENBQUM7SUFDaEIvQixJQUFJZ0MsWUFBWSxDQUFDdEIsWUFBWXVCLENBQUMsRUFBRXZCLFlBQVl3QixDQUFDLEVBQUV4QixZQUFZeUIsQ0FBQztJQUM1RG5DLElBQUlvQyxJQUFJLENBQUMsYUFBVVksT0FBT0MsUUFBUSxHQUFHO1FBQUVHLE9BQU87SUFBUztJQUN2RHBELElBQUlvQyxJQUFJLENBQUMsU0FBU1ksT0FBT0MsUUFBUSxHQUFHO1FBQUVHLE9BQU87SUFBUztJQUV0RCw2QkFBNkI7SUFDN0IsTUFBTUMsVUFBVTtJQUNoQixJQUFLLElBQUlaLElBQUksR0FBR0EsSUFBSSxHQUFHQSxJQUFLO1FBQzFCLE1BQU1hLFFBQVEsSUFBS0MsS0FBS0MsRUFBRSxHQUFHLElBQUs7UUFDbEMsTUFBTUMsT0FBT1QsUUFBUU8sS0FBS0csR0FBRyxDQUFDSixTQUFVSixDQUFBQSxhQUFhO1FBQ3JELE1BQU1TLE9BQU9WLFFBQVFNLEtBQUtLLEdBQUcsQ0FBQ04sU0FBVUosQ0FBQUEsYUFBYTtRQUNyRGxELElBQUlrQixZQUFZLENBQUNSLFlBQVl1QixDQUFDLEVBQUV2QixZQUFZd0IsQ0FBQyxFQUFFeEIsWUFBWXlCLENBQUM7UUFDNURuQyxJQUFJbUQsTUFBTSxDQUFDTSxNQUFNRSxNQUFNTixTQUFTO0lBQ2xDO0lBRUEsMENBQTBDO0lBQzFDLE1BQU1RLG9CQUFvQmpELFFBQVE7SUFDbEMsTUFBTWtELHFCQUFxQjlDLFNBQVM7SUFDcEMsTUFBTStDLGdCQUFnQm5ELFFBQVFpRCxvQkFBb0I7SUFDbEQsTUFBTUcsZ0JBQWdCO0lBRXRCLElBQUlqRSxRQUFRa0UsZUFBZSxFQUFFO1FBQzNCLElBQUk7WUFDRixNQUFNQyxxQkFBcUIsTUFBTXhDLGtCQUFrQjNCLFFBQVFrRSxlQUFlO1lBQzFFakUsSUFBSTJCLFFBQVEsQ0FBQ3VDLG9CQUFvQixRQUFRSCxlQUFlQyxlQUFlSCxtQkFBbUJDO1FBQzVGLEVBQUUsT0FBT2xDLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUF1Q0E7WUFDckQsaURBQWlEO1lBQ2pENUIsSUFBSWtCLFlBQVksQ0FBQyxLQUFLLEtBQUs7WUFDM0JsQixJQUFJbUIsSUFBSSxDQUFDNEMsZUFBZUMsZUFBZUgsbUJBQW1CQyxvQkFBb0I7WUFDOUU5RCxJQUFJZ0MsWUFBWSxDQUFDLEtBQUssS0FBSztZQUMzQmhDLElBQUkrQixXQUFXLENBQUM7WUFDaEIvQixJQUFJb0MsSUFBSSxDQUFDLHFCQUFxQjJCLGdCQUFnQkYsb0JBQWtCLEdBQUdHLGdCQUFnQkYscUJBQW1CLEdBQUc7Z0JBQUVWLE9BQU87WUFBUztRQUM3SDtJQUNGO0lBRUEsb0NBQW9DO0lBQ3BDLElBQUlyRCxRQUFRb0UsTUFBTSxJQUFJcEUsUUFBUXFFLFVBQVUsRUFBRTtRQUN4QyxJQUFJQyxZQUFZdEUsUUFBUW9FLE1BQU07UUFFOUIsSUFBSSxDQUFDRSxXQUFXO1lBQ2QsK0JBQStCO1lBQy9CLElBQUk7Z0JBQ0ZBLFlBQVksTUFBTXhFLDZDQUFnQixDQUFDRSxRQUFRZ0QsSUFBSSxJQUFJaEQsUUFBUXdFLEVBQUUsRUFBRTtvQkFDN0QzRCxPQUFPO29CQUNQNEQsUUFBUTtvQkFDUkMsT0FBTzt3QkFDTEMsTUFBTXJFO3dCQUNOc0UsT0FBT3BFO29CQUNUO2dCQUNGO1lBQ0YsRUFBRSxPQUFPcUIsT0FBTztnQkFDZEMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQkE7WUFDMUM7UUFDRjtRQUVBLElBQUl5QyxXQUFXO1lBQ2IsTUFBTU8sU0FBUztZQUNmLE1BQU1DLE1BQU07WUFDWixNQUFNQyxNQUFNOUQsU0FBUzRELFNBQVM7WUFDOUI1RSxJQUFJMkIsUUFBUSxDQUFDMEMsV0FBVyxPQUFPUSxLQUFLQyxLQUFLRixRQUFRQTtRQUNuRDtJQUNGO0lBRUEsNEJBQTRCO0lBQzVCLElBQUk3RSxRQUFRZ0YsVUFBVSxJQUFJaEYsUUFBUWlGLGNBQWMsRUFBRTtRQUNoRGhGLElBQUk4QixPQUFPLENBQUMsYUFBYTtRQUN6QjlCLElBQUkrQixXQUFXLENBQUM7UUFDaEIvQixJQUFJZ0MsWUFBWSxDQUFDckIsYUFBYXNCLENBQUMsRUFBRXRCLGFBQWF1QixDQUFDLEVBQUV2QixhQUFhd0IsQ0FBQztRQUMvRCxNQUFNOEMsYUFBYWxGLFFBQVFnRixVQUFVLEdBQ2pDLHFCQUF3RSxPQUF6RCxJQUFJRyxLQUFLbkYsUUFBUWdGLFVBQVUsRUFBRUksa0JBQWtCLENBQUMsWUFDL0Q7UUFDSm5GLElBQUlvQyxJQUFJLENBQUM2QyxZQUFZckUsUUFBUSxHQUFHSSxTQUFTLElBQUk7WUFBRW9DLE9BQU87UUFBUztJQUNqRTtJQUVBLE9BQU9wRCxJQUFJb0YsTUFBTSxDQUFDO0FBQ3BCLEVBQUU7QUFFRjs7Q0FFQyxHQUNELFNBQVNoRSxzQkFBc0JwQixHQUFVLEVBQUVZLEtBQWEsRUFBRUksTUFBYyxFQUFFeUQsS0FBYTtJQUNyRixNQUFNWSxNQUFNNUUsU0FBU2dFO0lBQ3JCekUsSUFBSWtCLFlBQVksQ0FBQ21FLElBQUlwRCxDQUFDLEVBQUVvRCxJQUFJbkQsQ0FBQyxFQUFFbUQsSUFBSWxELENBQUM7SUFDcENuQyxJQUFJNEMsWUFBWSxDQUFDeUMsSUFBSXBELENBQUMsRUFBRW9ELElBQUluRCxDQUFDLEVBQUVtRCxJQUFJbEQsQ0FBQztJQUNwQ25DLElBQUk2QyxZQUFZLENBQUM7SUFFakIscUJBQXFCO0lBQ3JCLE1BQU15QyxhQUFhO0lBRW5CLDBCQUEwQjtJQUMxQnRGLElBQUk4QyxJQUFJLENBQUMsR0FBR3dDLFlBQVlBLFlBQVlBO0lBQ3BDdEYsSUFBSThDLElBQUksQ0FBQ3dDLFlBQVksR0FBR0EsWUFBWUE7SUFFcEMseUJBQXlCO0lBQ3pCdEYsSUFBSThDLElBQUksQ0FBQ2xDLFFBQVEwRSxZQUFZLEdBQUcxRSxRQUFRMEUsWUFBWUE7SUFDcER0RixJQUFJOEMsSUFBSSxDQUFDbEMsUUFBUTBFLFlBQVlBLFlBQVkxRSxPQUFPMEU7SUFFaEQsMEJBQTBCO0lBQzFCdEYsSUFBSThDLElBQUksQ0FBQyxHQUFHOUIsU0FBU3NFLFlBQVlBLFlBQVl0RSxTQUFTc0U7SUFDdER0RixJQUFJOEMsSUFBSSxDQUFDd0MsWUFBWXRFLFNBQVNzRSxZQUFZQSxZQUFZdEU7SUFFdEQseUJBQXlCO0lBQ3pCaEIsSUFBSThDLElBQUksQ0FBQ2xDLFFBQVEwRSxZQUFZdEUsU0FBU3NFLFlBQVkxRSxRQUFRMEUsWUFBWXRFO0lBQ3RFaEIsSUFBSThDLElBQUksQ0FBQ2xDLFFBQVEwRSxZQUFZdEUsU0FBU3NFLFlBQVkxRSxPQUFPSSxTQUFTc0U7SUFFbEUsNENBQTRDO0lBQzVDLE1BQU1DLGNBQWM7SUFFcEIsT0FBTztJQUNQQyxZQUFZeEYsS0FBS1ksUUFBTSxHQUFHLEdBQUcyRSxhQUFhZDtJQUMxQ2UsWUFBWXhGLEtBQUtZLFFBQU0sSUFBSSxJQUFJLEdBQUcyRSxjQUFjLEtBQUtkO0lBQ3JEZSxZQUFZeEYsS0FBS1ksUUFBTSxJQUFJLElBQUksR0FBRzJFLGNBQWMsS0FBS2Q7SUFFckQsZ0JBQWdCO0lBQ2hCZSxZQUFZeEYsS0FBSyxHQUFHZ0IsU0FBTyxHQUFHdUUsYUFBYWQ7SUFDM0NlLFlBQVl4RixLQUFLLEdBQUdnQixTQUFPLElBQUksSUFBSXVFLGNBQWMsS0FBS2Q7SUFDdERlLFlBQVl4RixLQUFLLEdBQUdnQixTQUFPLElBQUksSUFBSXVFLGNBQWMsS0FBS2Q7QUFDeEQ7QUFFQTs7Q0FFQyxHQUNELGVBQWUvQyxrQkFBa0IrRCxHQUFXO0lBQzFDLE1BQU1DLFdBQVcsTUFBTUMsTUFBTUY7SUFDN0IsTUFBTUcsT0FBTyxNQUFNRixTQUFTRSxJQUFJO0lBRWhDLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMzQixNQUFNQyxTQUFTLElBQUlDO1FBQ25CRCxPQUFPRSxTQUFTLEdBQUcsSUFBTUosUUFBUUUsT0FBT0csTUFBTTtRQUM5Q0gsT0FBT0ksT0FBTyxHQUFHTDtRQUNqQkMsT0FBT0ssYUFBYSxDQUFDVDtJQUN2QjtBQUNGO0FBRUE7O0NBRUMsR0FDRCxTQUFTakQsU0FBUzNDLEdBQVUsRUFBRXNHLENBQVMsRUFBRUMsQ0FBUyxFQUFFQyxJQUFZLEVBQUUvQixLQUFhO0lBQzdFLE1BQU1ZLE1BQU01RSxTQUFTZ0U7SUFDckJ6RSxJQUFJa0IsWUFBWSxDQUFDbUUsSUFBSXBELENBQUMsRUFBRW9ELElBQUluRCxDQUFDLEVBQUVtRCxJQUFJbEQsQ0FBQztJQUVwQyxNQUFNc0UsU0FBUyxFQUFFO0lBQ2pCLE1BQU1DLGNBQWNGO0lBQ3BCLE1BQU1HLGNBQWNILE9BQU87SUFFM0IsSUFBSyxJQUFJL0QsSUFBSSxHQUFHQSxJQUFJLElBQUlBLElBQUs7UUFDM0IsTUFBTW1FLFNBQVNuRSxJQUFJLE1BQU0sSUFBSWlFLGNBQWNDO1FBQzNDLE1BQU1yRCxRQUFRLElBQUtDLEtBQUtDLEVBQUUsR0FBSSxJQUFJRCxLQUFLQyxFQUFFLEdBQUc7UUFDNUNpRCxPQUFPSSxJQUFJLENBQUM7WUFDVlAsSUFBSS9DLEtBQUtHLEdBQUcsQ0FBQ0osU0FBU3NEO1lBQ3RCTCxJQUFJaEQsS0FBS0ssR0FBRyxDQUFDTixTQUFTc0Q7U0FDdkI7SUFDSDtJQUVBNUcsSUFBSTRDLFlBQVksQ0FBQ3lDLElBQUlwRCxDQUFDLEVBQUVvRCxJQUFJbkQsQ0FBQyxFQUFFbUQsSUFBSWxELENBQUM7SUFDcENuQyxJQUFJa0IsWUFBWSxDQUFDbUUsSUFBSXBELENBQUMsRUFBRW9ELElBQUluRCxDQUFDLEVBQUVtRCxJQUFJbEQsQ0FBQztJQUVwQyx3QkFBd0I7SUFDeEIsTUFBTTJFLFFBQVEsRUFBRTtJQUNoQixJQUFLLElBQUlyRSxJQUFJLEdBQUdBLElBQUlnRSxPQUFPTSxNQUFNLEVBQUV0RSxJQUFLO1FBQ3RDLE1BQU11RSxZQUFZLENBQUN2RSxJQUFJLEtBQUtnRSxPQUFPTSxNQUFNO1FBQ3pDRCxNQUFNRCxJQUFJLENBQUM7WUFDVEosTUFBTSxDQUFDTyxVQUFVLENBQUMsRUFBRSxHQUFHUCxNQUFNLENBQUNoRSxFQUFFLENBQUMsRUFBRTtZQUNuQ2dFLE1BQU0sQ0FBQ08sVUFBVSxDQUFDLEVBQUUsR0FBR1AsTUFBTSxDQUFDaEUsRUFBRSxDQUFDLEVBQUU7U0FDcEM7SUFDSDtJQUVBekMsSUFBSThHLEtBQUssQ0FBQ0EsT0FBT0wsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQUM7UUFBRztLQUFFLEVBQUU7QUFDdkQ7QUFFQTs7Q0FFQyxHQUNELFNBQVNqQixZQUFZeEYsR0FBVSxFQUFFc0csQ0FBUyxFQUFFQyxDQUFTLEVBQUVDLElBQVksRUFBRS9CLEtBQWE7SUFDaEYsTUFBTVksTUFBTTVFLFNBQVNnRTtJQUNyQnpFLElBQUlrQixZQUFZLENBQUNtRSxJQUFJcEQsQ0FBQyxFQUFFb0QsSUFBSW5ELENBQUMsRUFBRW1ELElBQUlsRCxDQUFDO0lBRXBDLE1BQU1zRSxTQUFTO1FBQ2I7WUFBQztZQUFHLENBQUNEO1NBQUs7UUFDVjtZQUFDQTtZQUFNO1NBQUU7UUFDVDtZQUFDO1lBQUdBO1NBQUs7UUFDVDtZQUFDLENBQUNBO1lBQU07U0FBRSxDQUFHLGFBQWE7S0FDM0I7SUFFRHhHLElBQUk4RyxLQUFLLENBQ1A7UUFDRTtZQUFDTCxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBR0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7U0FBQztRQUMxRDtZQUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBR0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7U0FBQztRQUMxRDtZQUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBR0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7U0FBQztRQUMxRDtZQUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBR0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUVBLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHQSxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUU7U0FBQztLQUMzRCxFQUNESCxJQUFJRyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRUYsSUFBSUUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFBQztRQUFHO0tBQUUsRUFBRTtBQUVoRDtBQVdBLFNBQVNoRyxTQUFTd0csR0FBVztJQUMzQkEsTUFBTUEsSUFBSUMsT0FBTyxDQUFDLE1BQU07SUFFeEIsSUFBSUQsSUFBSUYsTUFBTSxLQUFLLEdBQUc7UUFDcEJFLE1BQU1BLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFO0lBQzNEO0lBRUEsTUFBTUUsU0FBU0MsU0FBU0gsS0FBSztJQUM3QixNQUFNaEYsSUFBSSxVQUFXLEtBQU07SUFDM0IsTUFBTUMsSUFBSSxVQUFXLElBQUs7SUFDMUIsTUFBTUMsSUFBSWdGLFNBQVM7SUFFbkIsT0FBTztRQUFFbEY7UUFBR0M7UUFBR0M7SUFBRTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy92b3VjaGVyUERGL1ZvdWNoZXJQREYudHN4P2RiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzUERGIGZyb20gXCJqc3BkZlwiO1xuaW1wb3J0IFFSQ29kZSBmcm9tIFwicXJjb2RlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVm91Y2hlciB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgY29kZTogc3RyaW5nO1xuICBzdGF0dXM6IHN0cmluZztcbiAgZXhwaXJ5RGF0ZTogc3RyaW5nIHwgbnVsbDtcbiAgcmVkZW1wdGlvbnM6IG51bWJlcjtcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIGFtb3VudD86IG51bWJlcjtcbiAgY3VycmVuY3k/OiBzdHJpbmc7XG4gIHFyQ29kZT86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHRlbXBsYXRlPzogc3RyaW5nO1xuICBwcmltYXJ5Q29sb3I/OiBzdHJpbmc7XG4gIHNlY29uZGFyeUNvbG9yPzogc3RyaW5nO1xuICB0ZXh0Q29sb3I/OiBzdHJpbmc7XG4gIGxvZ29Vcmw/OiBzdHJpbmc7IC8vIExvZ28gZGEgZW1wcmVzYSAocGVxdWVuYSwgYW8gbGFkbyBkbyBub21lKVxuICBzaG93TG9nbz86IGJvb2xlYW47XG4gIHNob3dRUkNvZGU/OiBib29sZWFuO1xuICBzaG93RXhwaXJ5RGF0ZT86IGJvb2xlYW47XG4gIHZvdWNoZXJJbWFnZVVybD86IHN0cmluZzsgLy8gSW1hZ2VtIGdyYW5kZSBkbyB2b3VjaGVyIChsYWRvIGRpcmVpdG8pXG59XG5cbi8qKlxuICogR2VuZXJhdGVzIGEgdm91Y2hlciBQREYgc2ltaWxhciB0byB0aGUgcHJvdmlkZWQgZGVzaWduXG4gKi9cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVZvdWNoZXJQREYgPSBhc3luYyAodm91Y2hlcjogVm91Y2hlcik6IFByb21pc2U8QmxvYj4gPT4ge1xuICBjb25zdCBkb2MgPSBuZXcganNQREYoe1xuICAgIG9yaWVudGF0aW9uOiBcImxhbmRzY2FwZVwiLFxuICAgIHVuaXQ6IFwibW1cIixcbiAgICBmb3JtYXQ6IFwiYTVcIixcbiAgfSk7XG5cbiAgLy8gQ29yZXMgcHJpbmNpcGFpc1xuICBjb25zdCBnb2xkQ29sb3IgPSBcIiNENEE1NzRcIjsgLy8gQ29yIGRvdXJhZGEvw6JtYmFyXG4gIGNvbnN0IGRhcmtHcmF5Q29sb3IgPSBcIiM0QTRBNEFcIjsgLy8gQ2luemEgZXNjdXJvIHBhcmEgdGV4dG9cbiAgY29uc3QgbGlnaHRHcmF5Q29sb3IgPSBcIiM4QThBOEFcIjsgLy8gQ2luemEgY2xhcm9cbiAgY29uc3Qgd2hpdGVDb2xvciA9IFwiI0ZGRkZGRlwiO1xuXG4gIGNvbnN0IGdvbGRSR0IgPSBoZXhUb1JnYihnb2xkQ29sb3IpO1xuICBjb25zdCBkYXJrR3JheVJHQiA9IGhleFRvUmdiKGRhcmtHcmF5Q29sb3IpO1xuICBjb25zdCBsaWdodEdyYXlSR0IgPSBoZXhUb1JnYihsaWdodEdyYXlDb2xvcik7XG5cbiAgLy8gRGltZW5zw7VlcyBkYSBww6FnaW5hXG4gIGNvbnN0IHdpZHRoID0gZG9jLmludGVybmFsLnBhZ2VTaXplLmdldFdpZHRoKCk7XG4gIGNvbnN0IGhlaWdodCA9IGRvYy5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRIZWlnaHQoKTtcblxuICAvLyBGdW5kbyBicmFuY29cbiAgZG9jLnNldEZpbGxDb2xvcigyNTUsIDI1NSwgMjU1KTtcbiAgZG9jLnJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCwgXCJGXCIpO1xuXG4gIC8vIERlY29yYcOnw6NvIG5hcyBib3JkYXMgKGVsZW1lbnRvcyBnZW9tw6l0cmljb3MgZG91cmFkb3MpXG4gIGRyYXdCb3JkZXJEZWNvcmF0aW9ucyhkb2MsIHdpZHRoLCBoZWlnaHQsIGdvbGRDb2xvcik7XG5cbiAgLy8gTG9nbyBkYSBlbXByZXNhIChwZXF1ZW5hLCBsYWRvIGVzcXVlcmRvKVxuICBjb25zdCBsb2dvU2l6ZSA9IDE1O1xuICBjb25zdCBsb2dvWCA9IDE1O1xuICBjb25zdCBsb2dvWSA9IDE1O1xuXG4gIGlmICh2b3VjaGVyLmxvZ29VcmwpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgbG9nb0Jhc2U2NCA9IGF3YWl0IGxvYWRJbWFnZUFzQmFzZTY0KHZvdWNoZXIubG9nb1VybCk7XG4gICAgICBkb2MuYWRkSW1hZ2UobG9nb0Jhc2U2NCwgXCJKUEVHXCIsIGxvZ29YLCBsb2dvWSwgbG9nb1NpemUsIGxvZ29TaXplKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gY2FycmVnYXIgbG9nbyBkYSBlbXByZXNhOlwiLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgLy8gTm9tZSBkYSBlbXByZXNhIFwiRUNPIFNBTEdBRE9TXCJcbiAgZG9jLnNldEZvbnQoXCJoZWx2ZXRpY2FcIiwgXCJib2xkXCIpO1xuICBkb2Muc2V0Rm9udFNpemUoMjQpO1xuICBkb2Muc2V0VGV4dENvbG9yKGRhcmtHcmF5UkdCLnIsIGRhcmtHcmF5UkdCLmcsIGRhcmtHcmF5UkdCLmIpO1xuICBkb2MudGV4dChcIkVDTyBTQUxHQURPU1wiLCBsb2dvWCArIGxvZ29TaXplICsgNSwgbG9nb1kgKyA4KTtcblxuICAvLyBTdWJ0w610dWxvIGRhIGVtcHJlc2FcbiAgZG9jLnNldEZvbnQoXCJoZWx2ZXRpY2FcIiwgXCJub3JtYWxcIik7XG4gIGRvYy5zZXRGb250U2l6ZSgxMCk7XG4gIGRvYy5zZXRUZXh0Q29sb3IobGlnaHRHcmF5UkdCLnIsIGxpZ2h0R3JheVJHQi5nLCBsaWdodEdyYXlSR0IuYik7XG4gIGRvYy50ZXh0KFwiQUdST1RVUklTTU8gJiBBQ1RJVklEQURFUyBFUVVFU1RSRVNcIiwgbG9nb1ggKyBsb2dvU2l6ZSArIDUsIGxvZ29ZICsgMTQpO1xuXG4gIC8vIEVzdHJlbGFzIGRlIGF2YWxpYcOnw6NvIChhYmFpeG8gZG8gbm9tZSBkYSBlbXByZXNhKVxuICBjb25zdCBzdGFyU2l6ZSA9IDM7XG4gIGNvbnN0IHN0YXJTcGFjaW5nID0gODtcbiAgY29uc3Qgc3RhclN0YXJ0WCA9IGxvZ29YICsgbG9nb1NpemUgKyA1O1xuICBjb25zdCBzdGFyWSA9IGxvZ29ZICsgMjA7XG4gIFxuICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xuICAgIGNvbnN0IHN0YXJYID0gc3RhclN0YXJ0WCArIGkgKiBzdGFyU3BhY2luZztcbiAgICBkcmF3U3Rhcihkb2MsIHN0YXJYLCBzdGFyWSwgc3RhclNpemUsIGdvbGRDb2xvcik7XG4gIH1cblxuICAvLyBMaW5oYSBob3Jpem9udGFsIGRlY29yYXRpdmFcbiAgZG9jLnNldERyYXdDb2xvcihnb2xkUkdCLnIsIGdvbGRSR0IuZywgZ29sZFJHQi5iKTtcbiAgZG9jLnNldExpbmVXaWR0aCgxKTtcbiAgZG9jLmxpbmUoMTUsIDQ1LCB3aWR0aCAtIDE1LCA0NSk7XG5cbiAgLy8gXCJHaWZ0IFZvdWNoZXJcIiBlbSBzY3JpcHQgZWxlZ2FudGVcbiAgZG9jLnNldEZvbnQoXCJ0aW1lc1wiLCBcIml0YWxpY1wiKTtcbiAgZG9jLnNldEZvbnRTaXplKDM2KTtcbiAgZG9jLnNldFRleHRDb2xvcihkYXJrR3JheVJHQi5yLCBkYXJrR3JheVJHQi5nLCBkYXJrR3JheVJHQi5iKTtcbiAgZG9jLnRleHQoXCJHaWZ0IFZvdWNoZXJcIiwgMjAsIDY1KTtcblxuICAvLyBUw610dWxvIGRvIHBhc3NlaW9cbiAgZG9jLnNldEZvbnQoXCJoZWx2ZXRpY2FcIiwgXCJib2xkXCIpO1xuICBkb2Muc2V0Rm9udFNpemUoMjgpO1xuICBkb2Muc2V0VGV4dENvbG9yKGRhcmtHcmF5UkdCLnIsIGRhcmtHcmF5UkdCLmcsIGRhcmtHcmF5UkdCLmIpO1xuICBkb2MudGV4dChcIlBBU1NFSU9cIiwgMjAsIDg1KTtcbiAgZG9jLnRleHQoXCJOQSBQUkFJQVwiLCAyMCwgMTAwKTtcblxuICAvLyBOw7ptZXJvIGRvIHZvdWNoZXJcbiAgZG9jLnNldEZvbnQoXCJoZWx2ZXRpY2FcIiwgXCJub3JtYWxcIik7XG4gIGRvYy5zZXRGb250U2l6ZSgxMik7XG4gIGRvYy5zZXRUZXh0Q29sb3IoZGFya0dyYXlSR0IuciwgZGFya0dyYXlSR0IuZywgZGFya0dyYXlSR0IuYik7XG4gIGRvYy50ZXh0KGBWb3VjaGVyIG7CuiAke3ZvdWNoZXIuY29kZSB8fCBcIjIwMjUwMjE0XCJ9YCwgMjAsIDExNSk7XG5cbiAgLy8gU2VsbyBjaXJjdWxhciBcIlbDgUxJRE8gMSBBTk9cIlxuICBjb25zdCBzZWFsWCA9IHdpZHRoIC8gMiAtIDIwO1xuICBjb25zdCBzZWFsWSA9IDcwO1xuICBjb25zdCBzZWFsUmFkaXVzID0gMTg7XG4gIFxuICAvLyBDw61yY3VsbyBleHRlcm5vIGRvdXJhZG9cbiAgZG9jLnNldEZpbGxDb2xvcihnb2xkUkdCLnIsIGdvbGRSR0IuZywgZ29sZFJHQi5iKTtcbiAgZG9jLmNpcmNsZShzZWFsWCwgc2VhbFksIHNlYWxSYWRpdXMsIFwiRlwiKTtcbiAgXG4gIC8vIEPDrXJjdWxvIGludGVybm8gYnJhbmNvXG4gIGRvYy5zZXRGaWxsQ29sb3IoMjU1LCAyNTUsIDI1NSk7XG4gIGRvYy5jaXJjbGUoc2VhbFgsIHNlYWxZLCBzZWFsUmFkaXVzIC0gMywgXCJGXCIpO1xuICBcbiAgLy8gVGV4dG8gZG8gc2Vsb1xuICBkb2Muc2V0Rm9udChcImhlbHZldGljYVwiLCBcImJvbGRcIik7XG4gIGRvYy5zZXRGb250U2l6ZSg4KTtcbiAgZG9jLnNldFRleHRDb2xvcihkYXJrR3JheVJHQi5yLCBkYXJrR3JheVJHQi5nLCBkYXJrR3JheVJHQi5iKTtcbiAgZG9jLnRleHQoXCJWw4FMSURPXCIsIHNlYWxYLCBzZWFsWSAtIDMsIHsgYWxpZ246IFwiY2VudGVyXCIgfSk7XG4gIGRvYy50ZXh0KFwiMSBBTk9cIiwgc2VhbFgsIHNlYWxZICsgMywgeyBhbGlnbjogXCJjZW50ZXJcIiB9KTtcbiAgXG4gIC8vIFBvbnRvcyBkZWNvcmF0aXZvcyBubyBzZWxvXG4gIGNvbnN0IGRvdFNpemUgPSAwLjU7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgODsgaSsrKSB7XG4gICAgY29uc3QgYW5nbGUgPSAoaSAqIE1hdGguUEkgKiAyKSAvIDg7XG4gICAgY29uc3QgZG90WCA9IHNlYWxYICsgTWF0aC5jb3MoYW5nbGUpICogKHNlYWxSYWRpdXMgLSA2KTtcbiAgICBjb25zdCBkb3RZID0gc2VhbFkgKyBNYXRoLnNpbihhbmdsZSkgKiAoc2VhbFJhZGl1cyAtIDYpO1xuICAgIGRvYy5zZXRGaWxsQ29sb3IoZGFya0dyYXlSR0IuciwgZGFya0dyYXlSR0IuZywgZGFya0dyYXlSR0IuYik7XG4gICAgZG9jLmNpcmNsZShkb3RYLCBkb3RZLCBkb3RTaXplLCBcIkZcIik7XG4gIH1cblxuICAvLyBJbWFnZW0gZ3JhbmRlIGRvIHZvdWNoZXIgKGxhZG8gZGlyZWl0bylcbiAgY29uc3Qgdm91Y2hlckltYWdlV2lkdGggPSB3aWR0aCAqIDAuNDU7XG4gIGNvbnN0IHZvdWNoZXJJbWFnZUhlaWdodCA9IGhlaWdodCAqIDAuNztcbiAgY29uc3Qgdm91Y2hlckltYWdlWCA9IHdpZHRoIC0gdm91Y2hlckltYWdlV2lkdGggLSAxMDtcbiAgY29uc3Qgdm91Y2hlckltYWdlWSA9IDIwO1xuXG4gIGlmICh2b3VjaGVyLnZvdWNoZXJJbWFnZVVybCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB2b3VjaGVySW1hZ2VCYXNlNjQgPSBhd2FpdCBsb2FkSW1hZ2VBc0Jhc2U2NCh2b3VjaGVyLnZvdWNoZXJJbWFnZVVybCk7XG4gICAgICBkb2MuYWRkSW1hZ2Uodm91Y2hlckltYWdlQmFzZTY0LCBcIkpQRUdcIiwgdm91Y2hlckltYWdlWCwgdm91Y2hlckltYWdlWSwgdm91Y2hlckltYWdlV2lkdGgsIHZvdWNoZXJJbWFnZUhlaWdodCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvIGFvIGNhcnJlZ2FyIGltYWdlbSBkbyB2b3VjaGVyOlwiLCBlcnJvcik7XG4gICAgICAvLyBQbGFjZWhvbGRlciBzZSBuw6NvIGNvbnNlZ3VpciBjYXJyZWdhciBhIGltYWdlbVxuICAgICAgZG9jLnNldEZpbGxDb2xvcigyNDAsIDI0MCwgMjQwKTtcbiAgICAgIGRvYy5yZWN0KHZvdWNoZXJJbWFnZVgsIHZvdWNoZXJJbWFnZVksIHZvdWNoZXJJbWFnZVdpZHRoLCB2b3VjaGVySW1hZ2VIZWlnaHQsIFwiRlwiKTtcbiAgICAgIGRvYy5zZXRUZXh0Q29sb3IoMTUwLCAxNTAsIDE1MCk7XG4gICAgICBkb2Muc2V0Rm9udFNpemUoMTIpO1xuICAgICAgZG9jLnRleHQoXCJJbWFnZW0gZG8gVm91Y2hlclwiLCB2b3VjaGVySW1hZ2VYICsgdm91Y2hlckltYWdlV2lkdGgvMiwgdm91Y2hlckltYWdlWSArIHZvdWNoZXJJbWFnZUhlaWdodC8yLCB7IGFsaWduOiBcImNlbnRlclwiIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIFFSIENvZGUgKGNhbnRvIGluZmVyaW9yIGVzcXVlcmRvKVxuICBpZiAodm91Y2hlci5xckNvZGUgfHwgdm91Y2hlci5zaG93UVJDb2RlKSB7XG4gICAgbGV0IHFyRGF0YVVSTCA9IHZvdWNoZXIucXJDb2RlO1xuICAgIFxuICAgIGlmICghcXJEYXRhVVJMKSB7XG4gICAgICAvLyBHZXJhciBRUiBDb2RlIHNlIG7Do28gZXhpc3RpclxuICAgICAgdHJ5IHtcbiAgICAgICAgcXJEYXRhVVJMID0gYXdhaXQgUVJDb2RlLnRvRGF0YVVSTCh2b3VjaGVyLmNvZGUgfHwgdm91Y2hlci5pZCwge1xuICAgICAgICAgIHdpZHRoOiAxNTAsXG4gICAgICAgICAgbWFyZ2luOiAxLFxuICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICBkYXJrOiBkYXJrR3JheUNvbG9yLFxuICAgICAgICAgICAgbGlnaHQ6IHdoaXRlQ29sb3JcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gZ2VyYXIgUVIgQ29kZTpcIiwgZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBpZiAocXJEYXRhVVJMKSB7XG4gICAgICBjb25zdCBxclNpemUgPSAyMDtcbiAgICAgIGNvbnN0IHFyWCA9IDE1O1xuICAgICAgY29uc3QgcXJZID0gaGVpZ2h0IC0gcXJTaXplIC0gMTU7XG4gICAgICBkb2MuYWRkSW1hZ2UocXJEYXRhVVJMLCBcIlBOR1wiLCBxclgsIHFyWSwgcXJTaXplLCBxclNpemUpO1xuICAgIH1cbiAgfVxuXG4gIC8vIERhdGEgZGUgdmFsaWRhZGUgKHJvZGFww6kpXG4gIGlmICh2b3VjaGVyLmV4cGlyeURhdGUgfHwgdm91Y2hlci5zaG93RXhwaXJ5RGF0ZSkge1xuICAgIGRvYy5zZXRGb250KFwiaGVsdmV0aWNhXCIsIFwibm9ybWFsXCIpO1xuICAgIGRvYy5zZXRGb250U2l6ZSgxMCk7XG4gICAgZG9jLnNldFRleHRDb2xvcihsaWdodEdyYXlSR0IuciwgbGlnaHRHcmF5UkdCLmcsIGxpZ2h0R3JheVJHQi5iKTtcbiAgICBjb25zdCBleHBpcnlUZXh0ID0gdm91Y2hlci5leHBpcnlEYXRlIFxuICAgICAgPyBgVsOhbGlkbyBhdMOpOiAke25ldyBEYXRlKHZvdWNoZXIuZXhwaXJ5RGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKCdwdC1QVCcpfWBcbiAgICAgIDogXCJWw6FsaWRvIHBvciAxIGFubyBhIHBhcnRpciBkYSBkYXRhIGRlIGVtaXNzw6NvXCI7XG4gICAgZG9jLnRleHQoZXhwaXJ5VGV4dCwgd2lkdGggLyAyLCBoZWlnaHQgLSAxMCwgeyBhbGlnbjogXCJjZW50ZXJcIiB9KTtcbiAgfVxuXG4gIHJldHVybiBkb2Mub3V0cHV0KFwiYmxvYlwiKTtcbn07XG5cbi8qKlxuICogRHJhd3MgZGVjb3JhdGl2ZSBib3JkZXIgZWxlbWVudHNcbiAqL1xuZnVuY3Rpb24gZHJhd0JvcmRlckRlY29yYXRpb25zKGRvYzoganNQREYsIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBjb2xvcjogc3RyaW5nKSB7XG4gIGNvbnN0IHJnYiA9IGhleFRvUmdiKGNvbG9yKTtcbiAgZG9jLnNldEZpbGxDb2xvcihyZ2IuciwgcmdiLmcsIHJnYi5iKTtcbiAgZG9jLnNldERyYXdDb2xvcihyZ2IuciwgcmdiLmcsIHJnYi5iKTtcbiAgZG9jLnNldExpbmVXaWR0aCgyKTtcblxuICAvLyBDYW50b3MgZGVjb3JhdGl2b3NcbiAgY29uc3QgY29ybmVyU2l6ZSA9IDIwO1xuICBcbiAgLy8gQ2FudG8gc3VwZXJpb3IgZXNxdWVyZG9cbiAgZG9jLmxpbmUoMCwgY29ybmVyU2l6ZSwgY29ybmVyU2l6ZSwgY29ybmVyU2l6ZSk7XG4gIGRvYy5saW5lKGNvcm5lclNpemUsIDAsIGNvcm5lclNpemUsIGNvcm5lclNpemUpO1xuICBcbiAgLy8gQ2FudG8gc3VwZXJpb3IgZGlyZWl0b1xuICBkb2MubGluZSh3aWR0aCAtIGNvcm5lclNpemUsIDAsIHdpZHRoIC0gY29ybmVyU2l6ZSwgY29ybmVyU2l6ZSk7XG4gIGRvYy5saW5lKHdpZHRoIC0gY29ybmVyU2l6ZSwgY29ybmVyU2l6ZSwgd2lkdGgsIGNvcm5lclNpemUpO1xuICBcbiAgLy8gQ2FudG8gaW5mZXJpb3IgZXNxdWVyZG9cbiAgZG9jLmxpbmUoMCwgaGVpZ2h0IC0gY29ybmVyU2l6ZSwgY29ybmVyU2l6ZSwgaGVpZ2h0IC0gY29ybmVyU2l6ZSk7XG4gIGRvYy5saW5lKGNvcm5lclNpemUsIGhlaWdodCAtIGNvcm5lclNpemUsIGNvcm5lclNpemUsIGhlaWdodCk7XG4gIFxuICAvLyBDYW50byBpbmZlcmlvciBkaXJlaXRvXG4gIGRvYy5saW5lKHdpZHRoIC0gY29ybmVyU2l6ZSwgaGVpZ2h0IC0gY29ybmVyU2l6ZSwgd2lkdGggLSBjb3JuZXJTaXplLCBoZWlnaHQpO1xuICBkb2MubGluZSh3aWR0aCAtIGNvcm5lclNpemUsIGhlaWdodCAtIGNvcm5lclNpemUsIHdpZHRoLCBoZWlnaHQgLSBjb3JuZXJTaXplKTtcblxuICAvLyBFbGVtZW50b3MgZGVjb3JhdGl2b3MgKGxvc2FuZ29zIHBlcXVlbm9zKVxuICBjb25zdCBkaWFtb25kU2l6ZSA9IDI7XG4gIFxuICAvLyBUb3BvXG4gIGRyYXdEaWFtb25kKGRvYywgd2lkdGgvMiwgOCwgZGlhbW9uZFNpemUsIGNvbG9yKTtcbiAgZHJhd0RpYW1vbmQoZG9jLCB3aWR0aC8yIC0gMTUsIDgsIGRpYW1vbmRTaXplICogMC43LCBjb2xvcik7XG4gIGRyYXdEaWFtb25kKGRvYywgd2lkdGgvMiArIDE1LCA4LCBkaWFtb25kU2l6ZSAqIDAuNywgY29sb3IpO1xuICBcbiAgLy8gTGFkbyBlc3F1ZXJkb1xuICBkcmF3RGlhbW9uZChkb2MsIDgsIGhlaWdodC8yLCBkaWFtb25kU2l6ZSwgY29sb3IpO1xuICBkcmF3RGlhbW9uZChkb2MsIDgsIGhlaWdodC8yIC0gMTUsIGRpYW1vbmRTaXplICogMC43LCBjb2xvcik7XG4gIGRyYXdEaWFtb25kKGRvYywgOCwgaGVpZ2h0LzIgKyAxNSwgZGlhbW9uZFNpemUgKiAwLjcsIGNvbG9yKTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gbG9hZCBpbWFnZSBhcyBiYXNlNjRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gbG9hZEltYWdlQXNCYXNlNjQodXJsOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCk7XG4gIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gIFxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLm9ubG9hZGVuZCA9ICgpID0+IHJlc29sdmUocmVhZGVyLnJlc3VsdCBhcyBzdHJpbmcpO1xuICAgIHJlYWRlci5vbmVycm9yID0gcmVqZWN0O1xuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGJsb2IpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gZHJhdyBhIHN0YXJcbiAqL1xuZnVuY3Rpb24gZHJhd1N0YXIoZG9jOiBqc1BERiwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHNpemU6IG51bWJlciwgY29sb3I6IHN0cmluZykge1xuICBjb25zdCByZ2IgPSBoZXhUb1JnYihjb2xvcik7XG4gIGRvYy5zZXRGaWxsQ29sb3IocmdiLnIsIHJnYi5nLCByZ2IuYik7XG5cbiAgY29uc3QgcG9pbnRzID0gW107XG4gIGNvbnN0IG91dGVyUmFkaXVzID0gc2l6ZTtcbiAgY29uc3QgaW5uZXJSYWRpdXMgPSBzaXplICogMC40O1xuICBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG4gICAgY29uc3QgcmFkaXVzID0gaSAlIDIgPT09IDAgPyBvdXRlclJhZGl1cyA6IGlubmVyUmFkaXVzO1xuICAgIGNvbnN0IGFuZ2xlID0gKGkgKiBNYXRoLlBJKSAvIDUgLSBNYXRoLlBJIC8gMjtcbiAgICBwb2ludHMucHVzaChbXG4gICAgICB4ICsgTWF0aC5jb3MoYW5nbGUpICogcmFkaXVzLFxuICAgICAgeSArIE1hdGguc2luKGFuZ2xlKSAqIHJhZGl1c1xuICAgIF0pO1xuICB9XG5cbiAgZG9jLnNldERyYXdDb2xvcihyZ2IuciwgcmdiLmcsIHJnYi5iKTtcbiAgZG9jLnNldEZpbGxDb2xvcihyZ2IuciwgcmdiLmcsIHJnYi5iKTtcbiAgXG4gIC8vIERyYXcgc3RhciB1c2luZyBsaW5lc1xuICBjb25zdCBsaW5lcyA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IG5leHRJbmRleCA9IChpICsgMSkgJSBwb2ludHMubGVuZ3RoO1xuICAgIGxpbmVzLnB1c2goW1xuICAgICAgcG9pbnRzW25leHRJbmRleF1bMF0gLSBwb2ludHNbaV1bMF0sXG4gICAgICBwb2ludHNbbmV4dEluZGV4XVsxXSAtIHBvaW50c1tpXVsxXVxuICAgIF0pO1xuICB9XG4gIFxuICBkb2MubGluZXMobGluZXMsIHBvaW50c1swXVswXSwgcG9pbnRzWzBdWzFdLCBbMSwgMV0sIFwiRlwiKTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdG8gZHJhdyBhIGRpYW1vbmRcbiAqL1xuZnVuY3Rpb24gZHJhd0RpYW1vbmQoZG9jOiBqc1BERiwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHNpemU6IG51bWJlciwgY29sb3I6IHN0cmluZykge1xuICBjb25zdCByZ2IgPSBoZXhUb1JnYihjb2xvcik7XG4gIGRvYy5zZXRGaWxsQ29sb3IocmdiLnIsIHJnYi5nLCByZ2IuYik7XG4gIFxuICBjb25zdCBwb2ludHMgPSBbXG4gICAgWzAsIC1zaXplXSwgIC8vIFRvcCBwb2ludFxuICAgIFtzaXplLCAwXSwgICAvLyBSaWdodCBwb2ludFxuICAgIFswLCBzaXplXSwgICAvLyBCb3R0b20gcG9pbnRcbiAgICBbLXNpemUsIDBdICAgLy8gTGVmdCBwb2ludFxuICBdO1xuICBcbiAgZG9jLmxpbmVzKFxuICAgIFtcbiAgICAgIFtwb2ludHNbMV1bMF0gLSBwb2ludHNbMF1bMF0sIHBvaW50c1sxXVsxXSAtIHBvaW50c1swXVsxXV0sXG4gICAgICBbcG9pbnRzWzJdWzBdIC0gcG9pbnRzWzFdWzBdLCBwb2ludHNbMl1bMV0gLSBwb2ludHNbMV1bMV1dLFxuICAgICAgW3BvaW50c1szXVswXSAtIHBvaW50c1syXVswXSwgcG9pbnRzWzNdWzFdIC0gcG9pbnRzWzJdWzFdXSxcbiAgICAgIFtwb2ludHNbMF1bMF0gLSBwb2ludHNbM11bMF0sIHBvaW50c1swXVsxXSAtIHBvaW50c1szXVsxXV1cbiAgICBdLFxuICAgIHggKyBwb2ludHNbMF1bMF0sIHkgKyBwb2ludHNbMF1bMV0sIFsxLCAxXSwgJ0YnXG4gICk7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBoZXggY29sb3IgdG8gUkdCXG4gKi9cbmludGVyZmFjZSBSR0Ige1xuICByOiBudW1iZXI7XG4gIGc6IG51bWJlcjtcbiAgYjogbnVtYmVyO1xufVxuXG5mdW5jdGlvbiBoZXhUb1JnYihoZXg6IHN0cmluZyk6IFJHQiB7XG4gIGhleCA9IGhleC5yZXBsYWNlKC9eIy8sIFwiXCIpO1xuXG4gIGlmIChoZXgubGVuZ3RoID09PSAzKSB7XG4gICAgaGV4ID0gaGV4WzBdICsgaGV4WzBdICsgaGV4WzFdICsgaGV4WzFdICsgaGV4WzJdICsgaGV4WzJdO1xuICB9XG5cbiAgY29uc3QgYmlnaW50ID0gcGFyc2VJbnQoaGV4LCAxNik7XG4gIGNvbnN0IHIgPSAoYmlnaW50ID4+IDE2KSAmIDI1NTtcbiAgY29uc3QgZyA9IChiaWdpbnQgPj4gOCkgJiAyNTU7XG4gIGNvbnN0IGIgPSBiaWdpbnQgJiAyNTU7XG5cbiAgcmV0dXJuIHsgciwgZywgYiB9O1xufSJdLCJuYW1lcyI6WyJqc1BERiIsIlFSQ29kZSIsImdlbmVyYXRlVm91Y2hlclBERiIsInZvdWNoZXIiLCJkb2MiLCJvcmllbnRhdGlvbiIsInVuaXQiLCJmb3JtYXQiLCJnb2xkQ29sb3IiLCJkYXJrR3JheUNvbG9yIiwibGlnaHRHcmF5Q29sb3IiLCJ3aGl0ZUNvbG9yIiwiZ29sZFJHQiIsImhleFRvUmdiIiwiZGFya0dyYXlSR0IiLCJsaWdodEdyYXlSR0IiLCJ3aWR0aCIsImludGVybmFsIiwicGFnZVNpemUiLCJnZXRXaWR0aCIsImhlaWdodCIsImdldEhlaWdodCIsInNldEZpbGxDb2xvciIsInJlY3QiLCJkcmF3Qm9yZGVyRGVjb3JhdGlvbnMiLCJsb2dvU2l6ZSIsImxvZ29YIiwibG9nb1kiLCJsb2dvVXJsIiwibG9nb0Jhc2U2NCIsImxvYWRJbWFnZUFzQmFzZTY0IiwiYWRkSW1hZ2UiLCJlcnJvciIsImNvbnNvbGUiLCJzZXRGb250Iiwic2V0Rm9udFNpemUiLCJzZXRUZXh0Q29sb3IiLCJyIiwiZyIsImIiLCJ0ZXh0Iiwic3RhclNpemUiLCJzdGFyU3BhY2luZyIsInN0YXJTdGFydFgiLCJzdGFyWSIsImkiLCJzdGFyWCIsImRyYXdTdGFyIiwic2V0RHJhd0NvbG9yIiwic2V0TGluZVdpZHRoIiwibGluZSIsImNvZGUiLCJzZWFsWCIsInNlYWxZIiwic2VhbFJhZGl1cyIsImNpcmNsZSIsImFsaWduIiwiZG90U2l6ZSIsImFuZ2xlIiwiTWF0aCIsIlBJIiwiZG90WCIsImNvcyIsImRvdFkiLCJzaW4iLCJ2b3VjaGVySW1hZ2VXaWR0aCIsInZvdWNoZXJJbWFnZUhlaWdodCIsInZvdWNoZXJJbWFnZVgiLCJ2b3VjaGVySW1hZ2VZIiwidm91Y2hlckltYWdlVXJsIiwidm91Y2hlckltYWdlQmFzZTY0IiwicXJDb2RlIiwic2hvd1FSQ29kZSIsInFyRGF0YVVSTCIsInRvRGF0YVVSTCIsImlkIiwibWFyZ2luIiwiY29sb3IiLCJkYXJrIiwibGlnaHQiLCJxclNpemUiLCJxclgiLCJxclkiLCJleHBpcnlEYXRlIiwic2hvd0V4cGlyeURhdGUiLCJleHBpcnlUZXh0IiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsIm91dHB1dCIsInJnYiIsImNvcm5lclNpemUiLCJkaWFtb25kU2l6ZSIsImRyYXdEaWFtb25kIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsImJsb2IiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWRlbmQiLCJyZXN1bHQiLCJvbmVycm9yIiwicmVhZEFzRGF0YVVSTCIsIngiLCJ5Iiwic2l6ZSIsInBvaW50cyIsIm91dGVyUmFkaXVzIiwiaW5uZXJSYWRpdXMiLCJyYWRpdXMiLCJwdXNoIiwibGluZXMiLCJsZW5ndGgiLCJuZXh0SW5kZXgiLCJoZXgiLCJyZXBsYWNlIiwiYmlnaW50IiwicGFyc2VJbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx\n"));

/***/ })

});