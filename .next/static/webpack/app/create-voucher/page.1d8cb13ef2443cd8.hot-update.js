"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/create-voucher/page",{

/***/ "(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx":
/*!**************************************************!*\
  !*** ./src/components/voucherPDF/VoucherPDF.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateVoucherPDF: function() { return /* binding */ generateVoucherPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var qrcode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! qrcode */ \"(app-pages-browser)/./node_modules/qrcode/lib/browser.js\");\n\n\n/**\n * Generates an elegant PDF for vouchers with improved readability\n */ const generateVoucherPDF = async (voucher)=>{\n    console.log(\"Generating PDF with voucher data:\", voucher);\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        orientation: \"landscape\",\n        unit: \"mm\",\n        format: \"a5\"\n    });\n    // Define improved color scheme\n    const primaryColor = voucher.primaryColor || \"#3B82F6\"; // Azul mais vibrante\n    const secondaryColor = voucher.secondaryColor || \"#9CA3AF\"; // Cinza mÃ©dio\n    const textColor = voucher.textColor || \"#1F2937\"; // Cinza escuro quase preto\n    const backgroundColor = \"#FFFFFF\"; // Fundo branco\n    // Convert hex colors to RGB for jsPDF\n    const primaryRGB = hexToRgb(primaryColor);\n    const secondaryRGB = hexToRgb(secondaryColor);\n    const textRGB = hexToRgb(textColor);\n    // Get page dimensions\n    const width = doc.internal.pageSize.getWidth();\n    const height = doc.internal.pageSize.getHeight();\n    // Add clean background\n    doc.setFillColor(255, 255, 255);\n    doc.rect(0, 0, width, height, \"F\");\n    // Draw elegant header bar\n    doc.setFillColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.1);\n    doc.rect(0, 0, width, 25, \"F\");\n    // Add decorative accent line\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n    doc.setLineWidth(3);\n    doc.line(0, 25, width, 25);\n    // Add business name if available\n    const businessName = voucher.businessName || \"\";\n    if (businessName) {\n        doc.setFontSize(12);\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.setTextColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n        doc.text(businessName, 20, 15);\n    }\n    // Add company logo (if available)\n    if (voucher.logoUrl && voucher.showLogo !== false) {\n        try {\n            const response = await fetch(voucher.logoUrl);\n            const blob = await response.blob();\n            const reader = new FileReader();\n            const base64Promise = new Promise((resolve, reject)=>{\n                reader.onloadend = ()=>resolve(reader.result);\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            });\n            const base64Logo = await base64Promise;\n            const img = new Image();\n            img.src = base64Logo;\n            await new Promise((resolve)=>{\n                img.onload = resolve;\n            });\n            const originalWidth = img.width;\n            const originalHeight = img.height;\n            const maxWidth = 40;\n            const maxHeight = 20;\n            let logoWidth = maxWidth;\n            let logoHeight = maxHeight;\n            if (originalWidth > originalHeight) {\n                logoHeight = originalHeight / originalWidth * maxWidth;\n            } else {\n                logoWidth = originalWidth / originalHeight * maxHeight;\n            }\n            const logoX = width - logoWidth - 20;\n            const logoY = 5;\n            doc.addImage(base64Logo, \"PNG\", logoX, logoY, logoWidth, logoHeight);\n        } catch (error) {\n            console.error(\"Error loading logo:\", error);\n        }\n    }\n    // Add voucher title section\n    const voucherTitleY = 50;\n    doc.setFillColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.05);\n    doc.roundedRect(20, voucherTitleY - 15, width - 40, 25, 2, 2, \"F\");\n    // Add voucher type/name\n    doc.setFontSize(22);\n    doc.setTextColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(voucher.name || \"Gift Voucher\", 30, voucherTitleY);\n    // Add status badge\n    if (voucher.status) {\n        const statusColor = getStatusColor(voucher.status);\n        const statusRGB = hexToRgb(statusColor);\n        const statusText = voucher.status.toUpperCase();\n        const statusWidth = doc.getStringUnitWidth(statusText) * 5;\n        // Background for status badge\n        doc.setFillColor(statusRGB.r, statusRGB.g, statusRGB.b, 0.15);\n        doc.roundedRect(width - 30 - statusWidth, voucherTitleY - 8, statusWidth + 10, 16, 3, 3, \"F\");\n        // Status text\n        doc.setFontSize(10);\n        doc.setTextColor(statusRGB.r, statusRGB.g, statusRGB.b);\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.text(statusText, width - 25, voucherTitleY, {\n            align: \"right\"\n        });\n    }\n    // Add description if available\n    if (voucher.description) {\n        doc.setFontSize(11);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setTextColor(textRGB.r, textRGB.g, textRGB.b);\n        doc.text(voucher.description, 30, voucherTitleY + 20, {\n            maxWidth: width - 60\n        });\n    }\n    // Add amount in highlighted box if available\n    if (voucher.amount && voucher.currency) {\n        const amountY = voucherTitleY + (voucher.description ? 40 : 25);\n        // Background for amount\n        doc.setFillColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.1);\n        doc.roundedRect(30, amountY - 15, 80, 25, 2, 2, \"F\");\n        // Border accent for amount\n        doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n        doc.setLineWidth(1);\n        doc.line(30, amountY - 15, 30, amountY + 10);\n        // Amount value\n        doc.setFontSize(9);\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(\"VALUE\", 38, amountY - 5);\n        doc.setFontSize(18);\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.setTextColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n        doc.text(\"\".concat(voucher.amount, \" \").concat(voucher.currency), 38, amountY + 7);\n    }\n    // Highlighted voucher code section\n    const codeY = voucherTitleY + (voucher.description ? 75 : 60);\n    // Code label\n    doc.setFontSize(9);\n    doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(\"VOUCHER CODE\", 30, codeY - 5);\n    // Code value with background\n    doc.setFillColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.05);\n    doc.roundedRect(30, codeY, width / 2 - 40, 15, 2, 2, \"F\");\n    doc.setFontSize(16);\n    doc.setTextColor(textRGB.r, textRGB.g, textRGB.b);\n    doc.setFont(\"courier\", \"bold\");\n    doc.text(voucher.code, 38, codeY + 10);\n    // Generate QR code if needed\n    let qrCodeData = voucher.qrCode;\n    if (!qrCodeData && voucher.showQRCode !== false || voucher.showQRCode === true) {\n        try {\n            qrCodeData = await qrcode__WEBPACK_IMPORTED_MODULE_1__.toDataURL(voucher.code, {\n                errorCorrectionLevel: \"M\",\n                margin: 1,\n                color: {\n                    dark: textColor,\n                    light: \"#FFFFFF\"\n                }\n            });\n        } catch (error) {\n            console.error(\"Error generating QR Code:\", error);\n        }\n    }\n    // Add QR code with better positioning and label\n    if (qrCodeData) {\n        const qrSize = 35;\n        const qrX = width - qrSize - 30;\n        const qrY = codeY - 10;\n        // QR code label\n        doc.setFontSize(9);\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(\"SCAN TO REDEEM\", qrX + qrSize / 2, qrY - 5, {\n            align: \"center\"\n        });\n        // QR code\n        doc.addImage(qrCodeData, \"PNG\", qrX, qrY, qrSize, qrSize);\n    }\n    // Add expiry date with improved styling\n    if (voucher.expiryDate && voucher.showExpiryDate !== false) {\n        const expiryDate = new Date(voucher.expiryDate);\n        const formattedDate = expiryDate.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n        const expiryY = height - 25;\n        // Expiry label\n        doc.setFontSize(9);\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(\"VALID UNTIL\", 30, expiryY - 5);\n        // Expiry value\n        doc.setFontSize(12);\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.setTextColor(textRGB.r, textRGB.g, textRGB.b);\n        doc.text(formattedDate, 30, expiryY + 5);\n    }\n    // Add terms and conditions if available\n    if (voucher.termsAndConditions && voucher.termsAndConditions.length > 0) {\n        doc.setFontSize(7);\n        doc.setTextColor(secondaryRGB.r, secondaryRGB.g, secondaryRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(\"Terms & Conditions:\", 30, height - 15);\n        let termsY = height - 10;\n        const termsX = 30;\n        voucher.termsAndConditions.forEach((term, index)=>{\n            if (index < 2) {\n                doc.text(\"\".concat(index + 1, \". \").concat(term), termsX, termsY);\n                termsY += 4;\n            }\n        });\n    }\n    // Add website/contact if available\n    if (voucher.website) {\n        doc.setFontSize(8);\n        doc.setTextColor(primaryRGB.r, primaryRGB.g, primaryRGB.b);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(voucher.website, width - 30, height - 10, {\n            align: \"right\"\n        });\n    }\n    // Add footer accent line\n    doc.setDrawColor(primaryRGB.r, primaryRGB.g, primaryRGB.b, 0.5);\n    doc.setLineWidth(1);\n    doc.line(0, height - 5, width, height - 5);\n    return doc.output(\"blob\");\n};\n/**\n * Returns a color based on voucher status with improved palette\n */ function getStatusColor(status) {\n    switch(status.toLowerCase()){\n        case \"active\":\n            return \"#10B981\"; // Esmeralda mais vibrante\n        case \"used\":\n            return \"#6B7280\"; // Cinza neutro\n        case \"expired\":\n            return \"#EF4444\"; // Vermelho mais vibrante\n        case \"pending\":\n            return \"#F59E0B\"; // Ãmbar mais vibrante\n        default:\n            return \"#6B7280\"; // Cinza padrÃ£o\n    }\n}\nfunction hexToRgb(hex) {\n    hex = hex.replace(/^#/, \"\");\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    return {\n        r,\n        g,\n        b\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/voucherPDF/VoucherPDF.tsx\n"));

/***/ })

});